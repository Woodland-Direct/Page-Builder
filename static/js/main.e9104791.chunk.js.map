{"version":3,"sources":["components/sideBar/parts/NavArrow.jsx","components/sideBar/parts/AddIcon.jsx","components/templates/Banner.jsx","components/templates/ButtonText.jsx","components/templates/FourImage.jsx","utils/globalStyles.js","utils/utils.js","components/templates/Gallery.jsx","components/templates/LargeImage.jsx","components/templates/Linking.jsx","components/templates/OneImageText.jsx","components/templates/Product.jsx","components/templates/Quote.jsx","components/templates/SingleButton.jsx","components/templates/TextOnly.jsx","components/templates/ThreeImage.jsx","components/templates/TwoLargeImage.jsx","components/templates/TwoSmallImage.jsx","components/templates/Video.jsx","components/modal/parts/Attention.jsx","utils/validation.js","components/modal/formEntryStyles.js","components/modal/FormEntry.jsx","components/modals/BannerModal.jsx","components/modals/ButtonTextModal.jsx","components/modal/parts/Button.jsx","components/modals/FourImageModal.jsx","components/modals/GalleryModal.jsx","components/modals/LargeImgModal.jsx","components/modals/LinkingModal.jsx","components/modals/OneImageTextModal.jsx","components/modals/ProductListModal.jsx","components/modals/QuotesModal.jsx","components/modals/SingleButtonModal.jsx","components/modals/TextOnlyModal.jsx","components/modals/ThreeImageModal.jsx","components/modals/TwoLargeImgModal.jsx","components/modals/TwoSmallImgModal.jsx","utils/templates.js","components/modals/VideoModal.jsx","components/sideBar/parts/TemplatesIndex.jsx","components/sideBar/SideBar.jsx","components/confirmExportPanel/parts/ExportIcon.jsx","components/confirmExportPanel/parts/ResponsiveIcon.jsx","components/modal/CMSModal.jsx","components/modal/IframeModal.jsx","components/modal/XMark.jsx","components/modal/Modal.jsx","components/confirmExportPanel/ConfirmExportPanel.jsx","components/controlPanel/parts/EditIcon.jsx","components/controlPanel/parts/RemoveIcon.jsx","components/controlPanel/parts/MoveIcon.jsx","components/controlPanel/ControlPanel.jsx","components/templatesContainers/TemplateContainer.jsx","components/templatesContainers/SelectedTemplatesContainer.jsx","components/templatesContainers/TemplatesPreview.jsx","components/App.jsx","index.js"],"names":["NavArrowSvg","styled","svg","_templateObject","NavArrow","react_default","a","createElement","className","viewBox","transform","d","fill","AddIcon","Banner","props","templateData","id","backgroundDark","value","addPadding","url","image","altText","title","subheader","style","background","concat","alt","dangerouslySetInnerHTML","__html","ButtonText","callToAction","href","ariaLabel","buttonText","aria-label","FourImage","image1","altText1","subheader1","image2","altText2","subheader2","image3","altText3","subheader3","image4","altText4","subheader4","first","groups","Object","values","second","third","fourth","src","map","p","idx","key","theme","mainPrimary","mainSecondary","accentPrimary","accentPrimaryDark","accentSecondary","accentSecondaryLight","backgroundLight","backgroundAccent","preHeaderDark","preHeaderLight","fontMain","fontOverlay","fontMenu","fontBasic","fontBody","fontTitles","fontLineHeight","tablet","tabletHeader","desktop","removeSelectedTemplates","templates","splice","readMore","window","innerWidth","readMoreContainer","document","getElementsByClassName","length","x","paragraghs","children","paragraphsHeight","y","offsetHeight","parentElement","classList","add","buildSingleGallery","galleryData","activeGalleryButton","activeImageBullet","displayedImage","selectedGallery","galleriesHTMLCollection","galleriesJSON","galleryIndex","imageContainer","bulletContainer","buttonContainer","objectProperyNames","getOwnPropertyNames","updateActiveGallery","galleryButtonIdx","innerText","changeGallery","galleryName","newActiveGalleryButton","keys","forEach","gallery","index","remove","buildGallery","changeInfoSection","infoIndex","infoHeader","infoBody","header","innerHTML","infoTitle","infoText","bulletNamingConvention","imgNamingConvention","imageTag","setAttribute","imageSource","altTag","appendChild","currentImage","selected","buttonElement","onclick","galleryNamingConvention","newSelectedBullet","newSelectedImg","handleGalleryClick","currentBullet","galleryValues","selectedButton","isActiveGallery","galleryButtonAriaLabel","dropDownElement","currentButton","buildGalleryButtons","buildJSON","eachGallery","infoBodyText","groupArray","images","item","includes","position","substr","imageObject","push","Gallery","styling","sectionName","sectionHeader","useEffect","scriptInnerText","JSON","parse","getElementById","Fragment","type","stringify","LargeImage","Linking","paragraphs","indexOf","link","anchorTitle","OneImageText","paragraph","Product","productWhite","product","productName","price","productPage","target","Quote","icon","bodyText","SingleButton","TextOnly","ThreeImage","TwoLargeImage","TwoSmallImage","Video","video","replace","convertVideo","frameBorder","width","height","Attention","version","Validation","data","isUrl","Validator","isEmpty","isNumber","isDecimal","isURL","protocols","require_protocol","doValidation","name","contains","isNotEmpty","EntryContainer","div","formEntryStyles_templateObject","label","Label","_templateObject2","entryStyles","error","Input","input","_templateObject3","TextArea","textarea","_templateObject4","ErrorMessage","_templateObject5","FormEntry","required","group","updateFormData","textArea","checked","storedValue","storedError","_useState","useState","_useState2","slicedToArray","inputValue","setValue","_useState3","_useState4","setSelected","_useState5","_useState6","noError","setNoError","_useState7","_useState8","errorMessage","setErrorMessage","handleBlur","isValid","validation","checkedValue","classGroup","onBlur","onChange","e","onFocus","newValue","handleChange","parts_Attention","BannerModal","modal_FormEntry","ButtonTextModal","StyledButton","button","Button_templateObject","Button","handleClick","onClick","ButtonContainer","FourImageModal_templateObject","Section","FourImageModal_templateObject2","FourImageModal","updateTemplateData","pTags","setPTags","clonedPtags","toConsumableArray","groupPosition","groupsArray","addRemovePTags","addParagraph","createdParagraphs","incomingDataClone","objectSpread","valueExists","react","parts_Button","GalleryModal_templateObject","GalleryButtons","GalleryModal_templateObject2","GalleryModal","cleanOutImages","galleryFormRender","setGalleryFormRender","clonedData","newGroup","groupIdx","names","storedImg","Number","isMaxGalleries","buildAllGalleryFields","addGallery","createdGalleries","pop","buildImgFields","count","imageGroups","galleryIdx","valueImage","createFields","GalleryModal_ButtonContainer","LargeImgModal","SubHeader","LinkingModal_templateObject","LinkingModal_templateObject2","Options","LinkingModal_templateObject3","Directions","LinkingModal_templateObject4","IdContainer","LinkingModal_templateObject5","LinkingModal","selectedTemplates","links","setLinks","currentLinks","buildLinks","addLink","createdLinks","LinkingModal_ButtonContainer","template","tempName","createLinks","OneImageTextModal_templateObject","OneImageTextModal","OneImageTextModal_ButtonContainer","ProductListModal_templateObject","ProductListModal_templateObject2","ProductListModal","productsRender","setProductsRender","buildAllProductFields","addProduct","createdProducts","ProductListModal_SubHeader","createProducts","ProductListModal_ButtonContainer","OptionTitle","QuotesModal_templateObject","ImageOption","QuotesModal_templateObject2","QuotesModal","SingleButtonModal","TextOnlyModal_templateObject","TextOnlyModal","TextOnlyModal_ButtonContainer","ThreeImageModal_templateObject","ThreeImageModal_templateObject2","ThreeImageModal","ThreeImageModal_Section","ThreeImageModal_ButtonContainer","TwoLargeImgModal_templateObject","TwoLargeImgModal_templateObject2","TwoLargeImgModal","TwoLargeImgModal_Section","TwoLargeImgModal_ButtonContainer","TwoSmallImgModal_templateObject","TwoSmallImgModal_templateObject2","templatesIdx","thumbnailImg","templatesData","Banner Template","component","modal","Button Text Template","Four Image Template","Gallery Template","Large Image Template","Linking Template","One Image Text Template","Product Template","Quote Template","Single Button Template","Text Only Template","Three Image Template","Two Large Image Template","Two Small Image Template","TwoSmallImgModal_Section","TwoSmallImgModal_ButtonContainer","Video Template","Template","TemplatesIndex_templateObject","ImgIcon","TemplatesIndex_templateObject2","TemplateImg","img","TemplatesIndex_templateObject3","TemplateName","TemplatesIndex_templateObject4","AddButton","TemplatesIndex_templateObject5","TemplatesIndex","updateSelectedTemplates","newTemplate","imgUrl","TemplatesIndex_Template","parts_AddIcon","SideBarContainer","SideBar_templateObject","NavHeader","SideBar_templateObject2","Title","SideBar_templateObject3","IndexContainer","SideBar_templateObject4","SideBar","navOpen","setNavOpen","navStatus","parts_NavArrow","parts_TemplatesIndex","Container","section","ExportIcon_templateObject","Export","ExportIcon_templateObject2","ExportText","ExportIcon_templateObject3","showCopy","ExportIcon","exportText","cx","cy","r","stroke","strokeWidth","ResponsiveIcon_templateObject","Text","ResponsiveIcon_templateObject2","ResponsiveIcon","ResponsiveIcon_Container","strokeLinecap","CMSDiv","CMSModal_templateObject","h2","CMSModal_templateObject2","CMSModal_templateObject3","CMSModal_templateObject4","GhostButton","CMSModal_templateObject5","CMSModal","formData","saveModalData","FormModal","CMSModal_Title","CMSModal_ButtonContainer","CMSModal_StyledButton","IframeModal_templateObject","IframeModal_templateObject2","IframeModal_templateObject3","IframeModal_templateObject4","IframeModal_templateObject5","IframeModal","goBack","moveForward","copyData","currentView","IframeModal_Container","IframeModal_Title","srcDoc","IframeModal_ButtonContainer","IframeModal_GhostButton","IframeModal_StyledButton","XMarkSvg","XMark_templateObject","XMark","x1","y1","x2","y2","ModalGrayBG","Modal_templateObject","ModalWrapper","Modal_templateObject2","Exit","Modal_templateObject3","screen","Modal","closeModal","displayModal","modal_XMark","modal_CMSModal","modal_IframeModal","ConfirmExport","ConfirmExportPanel_templateObject","ConfirmExportPanel_templateObject2","ConfirmExportPanel_templateObject3","Tip","ConfirmExportPanel_templateObject4","CssLink","rel","JsLink","ConfirmExportPanel","viewSize","setShowCopy","confirmedViews","setConfirmedViews","setCurrentView","setCopyData","_useState9","_useState10","setDisplayModal","createHTML","ReactDOMServer","renderToStaticMarkup","ConfirmExportPanel_CssLink","indexId","ConfirmExportPanel_JsLink","select","execCommand","toggleDisplayModal","ConfirmExportPanel_TextArea","readOnly","ConfirmExportPanel_Button","setTimeout","parts_ExportIcon","parts_ResponsiveIcon","modal_Modal","stopPropagation","back","next","EditIcon","RemoveIcon","MoveIcon","direction","Panel","ControlPanel_templateObject","IconContainer","ControlPanel_templateObject2","ControlPanel_templateObject3","ControlPanel","ControlPanel_Text","parts_EditIcon","parts_MoveIcon","parts_RemoveIcon","TemplateContain","TemplateContainer_templateObject","selectedTemplateLength","TemplateContainer","giveSelectedTemplateData","Component","displayForm","setDisplayForm","setData","setError","toggleDisplayForm","newData","controlPanel_ControlPanel","inputs","errorInfo","clonedGroups","incompleteFields","errorPresent","getErrorData","numberOfInputs","newGroups","numberOfGroups","getGroupInputs","getEmptyInputs","updatedData","newFormData","object","arrayLength","defineProperty","numberOfImages","TemplatesContainer","SelectedTemplatesContainer_templateObject","SelectedTemplatesContainer","confirmExportPanel_ConfirmExportPanel","templatesContainers_TemplateContainer","HeaderFooterImg","TemplatesPreview_templateObject","TemplatesPreview_templateObject2","TemplateDirections","TemplatesPreview_templateObject3","TemplatesPreview","noSelections","TemplatesPreview_TemplatesContainer","templatesContainers_SelectedTemplatesContainer","App","setScreen","setSelectedTemplates","action","updatedTemplates","clone","addSelectedTemplates","confirm","newLocation","moveUpSelectedTemplates","moveDownSelectedTemplates","updateScreen","headerFooter","determineScreen","addEventListener","removeEventListener","readMoreButtons","this","toggle","textContent","addReadMoreClicks","styled_components_browser_esm","sideBar_SideBar","templatesContainers_TemplatesPreview","ReactDOM","render","components_App"],"mappings":"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","file":"static/js/main.e9104791.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst NavArrowSvg = styled.svg`\n  height: 20px;\n  width: 40px;\n  padding: 10px;\n  cursor: pointer;\n`\nconst NavArrow = () => {\n  return (\n    <NavArrowSvg className={'nav-arrow'} viewBox='0 0 48.248 28.625'>\n      <g transform='translate(65.525 59.149) rotate(180)'>\n        <g transform='translate(17.277 30.525)'>\n          <path\n            d='M19.119,29.369a3,3,0,0,0-.864-2.134L6.922,15.9A3.019,3.019,0,0,0,2.653,20.17L11.8,29.318,2.653,38.466a3.037,3.037,0,0,0,0,4.269,2.954,2.954,0,0,0,2.134.864,3.085,3.085,0,0,0,2.134-.864L18.255,31.5A3,3,0,0,0,19.119,29.369Z'\n            transform='translate(-1.777 -15.025)'\n            fill='#fff'\n          />\n          <path\n            d='M39.231,27.234,27.9,15.9a3.019,3.019,0,0,0-4.269,4.269l9.148,9.148-9.148,9.148a3.037,3.037,0,0,0,0,4.269,2.954,2.954,0,0,0,2.134.864,3.085,3.085,0,0,0,2.134-.864L39.231,31.4A2.914,2.914,0,0,0,39.231,27.234Z'\n            transform='translate(-7.303 -15.025)'\n            fill='#fff'\n          />\n          <path\n            d='M60.189,27.234,48.856,15.9a3.019,3.019,0,1,0-4.269,4.269l9.148,9.148-9.2,9.2a3.037,3.037,0,0,0,0,4.269,2.954,2.954,0,0,0,2.134.864,3.085,3.085,0,0,0,2.134-.864L60.138,31.452A2.931,2.931,0,0,0,60.189,27.234Z'\n            transform='translate(-12.812 -15.025)'\n            fill='#fff'\n          />\n        </g>\n      </g>\n    </NavArrowSvg>\n  )\n}\nexport default NavArrow\n","import React from 'react'\nconst AddIcon = () => {\n  return (\n    <svg className={'add-icon'} viewBox='0 0 25.409 25.409'>\n      <g transform='translate(-17.225 -16.88)'>\n        <g transform='translate(17.225 16.88)'>\n          <g transform='translate(0 0)'>\n            <g>\n              <path\n                d='M14.429,1.38a12.785,12.785,0,0,0-12.7,12.7,12.785,12.785,0,0,0,12.7,12.7,12.785,12.785,0,0,0,12.7-12.7A12.785,12.785,0,0,0,14.429,1.38Zm0,22.734A10.1,10.1,0,0,1,4.4,14.084a10.1,10.1,0,0,1,10.03-10.03,10.1,10.1,0,0,1,10.03,10.03A10.1,10.1,0,0,1,14.429,24.114Z'\n                transform='translate(-1.725 -1.38)'\n                fill='#fff'\n              />\n              <path\n                d='M18.652,10.482H13.436V5.132A1.263,1.263,0,0,0,12.1,3.795a1.263,1.263,0,0,0-1.337,1.337v5.349H5.546a1.263,1.263,0,0,0-1.337,1.337,1.263,1.263,0,0,0,1.337,1.337h5.215v5.349A1.263,1.263,0,0,0,12.1,19.843a1.263,1.263,0,0,0,1.337-1.337V13.156h5.215a1.263,1.263,0,0,0,1.337-1.337A1.263,1.263,0,0,0,18.652,10.482Z'\n                transform='translate(0.605 0.886)'\n                fill='#fff'\n              />\n            </g>\n          </g>\n        </g>\n      </g>\n    </svg>\n  )\n}\nexport default AddIcon\n","import React from 'react'\nimport { PropTypes } from 'prop-types'\n\nconst Banner = props => {\n  const { templateData, id } = props\n  let backgroundDark = templateData.backgroundDark && templateData.backgroundDark.value ? 'background-dark' : ''\n  let addPadding = templateData.addPadding && templateData.addPadding.value ? 'add-padding' : 'padding'\n  const url = templateData.image\n    ? templateData.image.value\n    : 'https://dev.woodlanddirect.com/learningcenter/pagebuilder+/svgs/grey-img-icon.svg'\n  const altText = templateData.altText ? templateData.altText.value : 'Place Title Here'\n  const title = templateData.title ? templateData.title.value : 'Place Title Here'\n  const subheader = templateData.subheader ? templateData.subheader.value : 'Place Title Here'\n\n  return (\n    <div\n      style={{\n        background: `url(${url}) no-repeat center/cover #ebebeb`\n      }}\n      id={id}\n      alt={altText}\n      className={'banner-temp ' + backgroundDark + ' ' + addPadding}>\n      <div className='banner-text'>\n        <h1>{title}</h1>\n        <p dangerouslySetInnerHTML={{__html: subheader}}/>\n      </div>\n    </div>\n  )\n}\n\nBanner.propTypes = {\n  templateData: PropTypes.object,\n  id: PropTypes.string\n}\n\nexport default Banner\n","import React from 'react'\nimport { PropTypes } from 'prop-types'\n\nconst ButtonText = props => {\n  const { templateData, id } = props\n\n  let backgroundDark = templateData.backgroundDark && templateData.backgroundDark.value ? 'background-dark' : ''\n  let addPadding = templateData.addPadding && templateData.addPadding.value ? 'add-padding' : 'padding'\n  let callToAction = templateData.callToAction ? templateData.callToAction.value : 'Place a call to action text here'\n  let href = templateData.href ? templateData.href.value : 'place link here'\n  let ariaLabel = templateData.ariaLabel ? templateData.ariaLabel.value : ''\n  let buttonText = templateData.buttonText ? templateData.buttonText.value : 'press this button'\n\n  return (\n  // <!-- START BUTTON TEXT TEMPLATE -->\n    <div id={id} className={'button-text-template ' + backgroundDark + ' ' + addPadding}>\n      <p className='button-text-template-text'>{callToAction}</p>\n      <a className='button-link' href={href} aria-label={ariaLabel}>\n        <button className='template-button'>{buttonText}</button>\n      </a>\n    </div>\n  // <!-- END BUTTON TEXT TEMPLATE -->\n  )\n}\n\nButtonText.propTypes = {\n  templateData: PropTypes.object,\n  id: PropTypes.string\n}\n\nexport default ButtonText\n","import React from 'react'\nimport { PropTypes } from 'prop-types'\n\nconst FourImage = props => {\n  const { templateData, id } = props\n  let backgroundDark = templateData.backgroundDark && templateData.backgroundDark.value ? 'background-dark' : ''\n  let addPadding = templateData.addPadding && templateData.addPadding.value ? 'add-padding' : 'padding'\n\n  let title = templateData.title ? templateData.title.value : 'Place section title here'\n  let image1 = templateData.image1\n    ? templateData.image1.value\n    : 'https://dev.woodlanddirect.com/learningcenter/pagebuilder+/svgs/grey-img-icon.svg'\n  let altText1 = templateData.altText1 ? templateData.altText1.value : ''\n  let subheader1 = templateData.subheader1 ? templateData.subheader1.value : 'place info item title here'\n\n  let image2 = templateData.image2\n    ? templateData.image2.value\n    : 'https://dev.woodlanddirect.com/learningcenter/pagebuilder+/svgs/grey-img-icon.svg'\n  let altText2 = templateData.altText2 ? templateData.altText2.value : ''\n  let subheader2 = templateData.subheader2 ? templateData.subheader2.value : 'place info item title here'\n\n  let image3 = templateData.image3\n    ? templateData.image3.value\n    : 'https://dev.woodlanddirect.com/learningcenter/pagebuilder+/svgs/grey-img-icon.svg'\n  let altText3 = templateData.altText3 ? templateData.altText3.value : ''\n  let subheader3 = templateData.subheader3 ? templateData.subheader3.value : 'place info item title here'\n\n  let image4 = templateData.image4\n    ? templateData.image4.value\n    : 'https://dev.woodlanddirect.com/learningcenter/pagebuilder+/svgs/grey-img-icon.svg'\n  let altText4 = templateData.altText4 ? templateData.altText4.value : ''\n  let subheader4 = templateData.subheader4 ? templateData.subheader4.value : 'place info item title here'\n\n  //setting values for first, second, third, and fourth set of paragraphs for mapping through later\n  let first =\n    templateData.groups && templateData.groups[0]\n      ? Object.values(templateData.groups[0])\n      : [{ value: 'put paragraph text here' }]\n  let second =\n    templateData.groups && templateData.groups[1]\n      ? Object.values(templateData.groups[1])\n      : [{ value: 'put paragraph text here' }]\n  let third =\n    templateData.groups && templateData.groups[2]\n      ? Object.values(templateData.groups[2])\n      : [{ value: 'put paragraph text here' }]\n  let fourth =\n    templateData.groups && templateData.groups[3]\n      ? Object.values(templateData.groups[3])\n      : [{ value: 'put paragraph text here' }]\n  return (\n    // <!-- START FOUR IMAGE TEMPLATE -->\n    // <!-- make sure the images you choose are the same width/height, otherwise it will look weird -->\n    <div id={id} className={'four-img-template ' + backgroundDark + ' ' + addPadding}>\n      <h2 className='header'>{title}</h2>\n      <div className='center-container'>\n        {/* <!-- First Gallery Set --> */}\n        <div className='text-img-container'>\n          <img src={image1} alt={altText1} />\n          <h3 className='subheader'>{subheader1}</h3>\n          <div className='read-more-container'>\n            {/* <!-- Add or remove paragraph tags below --> */}\n            {first.map((p, idx) => {\n              return <p key={idx} dangerouslySetInnerHTML={{__html: p.value}}/>\n            })}\n            {/* <!-- End of paragraph tags --> */}\n          </div>\n          <button className={'read-more-button'}>read more</button>\n        </div>\n\n        {/* <!-- Second Gallery Set --> */}\n        <div className='text-img-container'>\n          <img src={image2} alt={altText2} />\n          <h3 className='subheader'>{subheader2}</h3>\n          <div className='read-more-container'>\n            {/* <!-- Add or remove paragraph tags below --> */}\n            {second.map((p, idx) => {\n              return <p key={idx} dangerouslySetInnerHTML={{__html: p.value}}/>\n            })}\n            {/* <!-- End of paragraph tags --> */}\n          </div>\n          <button className={'read-more-button'}>read more</button>\n        </div>\n\n        {/* <!-- Third Gallery Set --> */}\n        <div className='text-img-container'>\n          <img src={image3} alt={altText3} />\n          <h3 className='subheader'>{subheader3}</h3>\n          <div className='read-more-container'>\n            {/* <!-- Add or remove paragraph tags below --> */}\n            {third.map((p, idx) => {\n              return <p key={idx} dangerouslySetInnerHTML={{__html: p.value}}/>\n            })}\n            {/* <!-- End of paragraph tags --> */}\n          </div>\n          <button className={'read-more-button'}>read more</button>\n        </div>\n\n        {/* <!-- Fourth Gallery Set --> */}\n        <div className='text-img-container'>\n          <img src={image4} alt={altText4} />\n          <h3 className='subheader'>{subheader4}</h3>\n          <div className='read-more-container'>\n            {/* <!-- Add or remove paragraph tags below --> */}\n            {fourth.map((p, idx) => {\n              return <p key={idx} dangerouslySetInnerHTML={{__html: p.value}}/>\n            })}\n            {/* <!-- End of paragraph tags --> */}\n          </div>\n          <button className={'read-more-button'}>read more</button>\n        </div>\n      </div>\n    </div>\n    // <!-- END FOUR IMAGE TEMPLATE -->\n  )\n}\n\nFourImage.propTypes = {\n  templateData: PropTypes.object,\n  id: PropTypes.string\n}\n\nexport default FourImage\n","const theme = {\n  // Colors\n  mainPrimary: '#63605A', // Charcoal\n  mainSecondary: '#252422', // Dark Charcoal\n  accentPrimary: '#E66D1C', // Orange\n  accentPrimaryDark: '#E05D05', // Dark Orange\n  accentSecondary: '#1A6C96', // Blue\n  accentSecondaryLight: '#8EB6C6', // Light Blue\n  background: '#CCC9C1', // Grey\n  backgroundLight: '#D7D5CE', // Lighter Grey\n  backgroundAccent: '#ebebeb', // Lightest Grey\n  preHeaderDark: '#4B4B4B', // Dark Grey\n  preHeaderLight: '#C9C9C9', // Light Grey\n  fontMain: '#333333', // Black\n  fontOverlay: '#FFFFFF', // White\n  fontMenu: '#CCC9C1', // Grey\n\n  // Font Families\n  fontBasic: 'Arial,Helvetica,sans-serif',\n  fontBody: 'Open Sans,Trebuchet MS,sans-serif',\n  fontTitles: 'Playfair Display,Palatino,serif',\n\n  fontLineHeight: 14,\n\n  // Responsive queries\n  // mobile less than 740\n  tablet: 600, // more than 600\n  tabletHeader: 740, // more than 740\n  desktop: 1011 // more than 1011\n}\n\nexport { theme }\n","import { theme } from './globalStyles'\n\nexport const determineScreen = (width, headerFooter) => {\n  let screen\n  // sets the main breakpoints for header and footer\n  if (headerFooter) {\n    if (width < theme.tabletHeader) {\n      screen = 'mobile'\n    } else if (width < theme.desktop) {\n      screen = 'tablet'\n    } else {\n      screen = 'desktop'\n    }\n    // sets the breakpoints for everything else\n  } else {\n    if (width < theme.tablet) {\n      screen = 'mobile'\n    } else if (width < theme.desktop) {\n      screen = 'tablet'\n    } else {\n      screen = 'desktop'\n    }\n  }\n  return screen\n}\n\nexport const removeSelectedTemplates = (templates, idx) => {\n  templates.splice(idx, 1)\n  return templates\n}\n\nexport const addSelectedTemplates = (component, templates) => {\n  component.data = {}\n  templates.push(component)\n  return templates\n}\nexport const moveUpSelectedTemplates = (templates, idx) => {\n  let newLocation = idx - 1\n  templates.splice(newLocation, 0, templates.splice(idx, 1)[0])\n  return templates\n}\n\nexport const moveDownSelectedTemplates = (templates, idx) => {\n  let newLocation = idx + 1\n  templates.splice(newLocation, 0, templates.splice(idx, 1)[0])\n  return templates\n}\n\n// template functionality //\nexport const showMore = button => {\n  var parentElement = button.parentElement\n  parentElement.classList.toggle('more')\n  if (button.textContent === 'read more') {\n    button.textContent = 'read less'\n  } else {\n    button.textContent = 'read more'\n  }\n}\n// display read more button only in tablet and only if height is larger than 300px\nexport const readMore = () => {\n  var inTabletView = window.innerWidth < 1020 && window.innerWidth > 740\n  if (inTabletView) {\n    var readMoreContainer = document.getElementsByClassName('read-more-container')\n    if (readMoreContainer && readMoreContainer.length > 0) {\n      for (var x = 0; x < readMoreContainer.length; x++) {\n        var paragraghs = readMoreContainer[x].children\n        var paragraphsHeight = 0\n        for (var y = 0; y < paragraghs.length; y++) {\n          var heightIncludesMargin = paragraghs[y].offsetHeight + 20\n          paragraphsHeight += heightIncludesMargin\n        }\n        if (paragraphsHeight >= 300) {\n          var parentDiv = readMoreContainer[x].parentElement\n          parentDiv.classList.add('read')\n        }\n      }\n    }\n  }\n}\n\nexport const addReadMoreClicks = () => {\n  readMore()\n  var readMoreButtons = document.getElementsByClassName('read-more-button')\n  if (readMoreButtons && readMoreButtons.length > 0) {\n    for (var x = 0; x < readMoreButtons.length; x++) {\n      readMoreButtons[x].addEventListener('click', function () {\n        showMore(this)\n      })\n    }\n  }\n}\n\n//\n// GALLERY TEMPLATE BEGINS\n//\n\nfunction buildSingleGallery (galleryData) {\n  var galleriesHTMLCollection = document.getElementsByClassName('gallery-templates')\n  var galleriesJSON = galleryData.galleriesJSON\n  var activeGalleryButton // currently selected gallery button HTML element\n  var activeImageBullet // currently bullet selected in gallery HTML element\n  var displayedImage // current image displayed in gallery HTML element\n  var galleryIndex = galleryData.galleryIndex // assigned with gallery index for unique name assignment\n  var imageContainer = galleryData.imageContainer // container for gallery images HTML element\n  var bulletContainer = galleryData.bulletContainer // container for image bullet buttons HTML element\n  var buttonContainer = galleryData.buttonContainer // container for gallery buttons HTML element\n  var selectedGallery // currently selected gallery name to display\n\n  var objectProperyNames = Object.getOwnPropertyNames(galleriesJSON) // name of each gallery in JSON\n\n  // when a gallery is selected, this runs.\n  function handleGalleryClick (idx, galleryName, galleryNamingConvention, imgNamingConvention) {\n    var newSelectedBullet = document.getElementsByClassName(galleryNamingConvention)\n    var newSelectedImg = document.getElementsByClassName(imgNamingConvention)\n\n    // this finds the previously selected item and makes it false, and removes the active classes for the object\n    galleriesJSON[galleryName].forEach(function (image, index) {\n      var isSelectedImage = image.selected === true\n      if (isSelectedImage) {\n        image.selected = false\n        displayedImage[0].classList.remove('display-img')\n        activeImageBullet[0].classList.remove('active')\n      }\n    })\n\n    // sets new selected and active objects\n    galleriesJSON[galleryName][idx].selected = true\n    newSelectedImg[0].classList.add('display-img')\n    newSelectedBullet[0].classList.add('active')\n\n    // sets currently selected\n    activeImageBullet = newSelectedBullet\n    displayedImage = newSelectedImg\n  }\n\n  // in mobile and tablet, this updates the selected gallery buttons in the drop down\n  function updateActiveGallery (galleryButtonIdx) {\n    var selectedGallerySection = document.getElementsByClassName('selected-gallery')\n    selectedGallerySection[galleryIndex].innerText = objectProperyNames[galleryButtonIdx]\n  }\n\n  // upon click, this updates the page to the selected gallery\n  function changeGallery (galleryName, idx) {\n    var className = galleryName + galleryIndex + idx\n    var newActiveGalleryButton = document.getElementsByClassName(className)\n\n    // adds and removes the active css class\n    Object.keys(galleriesJSON).forEach(function (gallery, index) {\n      var galleryIsCurrentlySetAsActive = gallery === galleryName\n      if (galleryIsCurrentlySetAsActive) {\n        activeGalleryButton[0].classList.remove('active')\n        activeGalleryButton = newActiveGalleryButton\n        newActiveGalleryButton[0].classList.add('active')\n        updateActiveGallery(index)\n      }\n    })\n\n    // update and build gallery\n    selectedGallery = galleryName\n    buildGallery(galleryName)\n  }\n\n  // this updates the info section with the new gallery info\n  function changeInfoSection (galleryName) {\n    var infoIndex = galleryIndex * 2 // time two because each section has two infoIndex\n    var infoHeader = document.getElementsByClassName('info-header')\n    var infoBody = document.getElementsByClassName('info-body')[galleryIndex]\n\n    var headersArray = [infoHeader[infoIndex], infoHeader[infoIndex + 1]] // this is because of IE\n\n    headersArray.forEach(function (header) {\n      header.innerHTML = galleriesJSON[galleryName][0].infoTitle\n    })\n    infoBody.innerHTML = galleriesJSON[galleryName][0].infoText\n  }\n\n  // this builds the whole gallery section and functionality based on JSON\n  function buildGallery (gallery) {\n    imageContainer.innerHTML = ''\n    bulletContainer.innerHTML = ''\n\n    // this loops through each gallery in the JSON\n    galleriesJSON[gallery].forEach(function (image, idx) {\n      var bulletNamingConvention = 'bullet' + gallery + galleryIndex + idx\n      var imgNamingConvention = 'img' + gallery + galleryIndex + idx\n      var isValidImage = idx !== 0\n      if (isValidImage) {\n        // this builds the images\n        var imageTag = document.createElement('img')\n        imageTag.setAttribute('id', 'img' + idx)\n        imageTag.setAttribute('class', imgNamingConvention)\n        imageTag.setAttribute('src', image.imageSource)\n        imageTag.setAttribute('alt', image.altTag)\n        imageContainer.appendChild(imageTag)\n\n        // have to do this because IE\n        var currentImage = document.getElementsByClassName(imgNamingConvention)\n        image.selected\n          ? currentImage[currentImage.length - 1].classList.add('gallery-img', 'display-img')\n          : currentImage[currentImage.length - 1].classList.add('gallery-img')\n\n        // this builds the button associated with the image\n        var buttonElement = document.createElement('button')\n        buttonElement.setAttribute('id', 'button' + idx)\n        buttonElement.setAttribute('class', bulletNamingConvention)\n        buttonElement.setAttribute('aria-label', 'view image number ' + idx)\n        buttonElement.onclick = function () {\n          handleGalleryClick(idx, selectedGallery, bulletNamingConvention, imgNamingConvention)\n        }\n        bulletContainer.appendChild(buttonElement)\n\n        // have to do this because IE\n        var currentBullet = document.getElementsByClassName(bulletNamingConvention)\n        image.selected\n          ? currentBullet[currentBullet.length - 1].classList.add('bullet', 'active')\n          : currentBullet[currentBullet.length - 1].classList.add('bullet')\n      }\n      if (image.selected) {\n        activeImageBullet = document.getElementsByClassName('bullet' + gallery + galleryIndex + idx)\n        displayedImage = document.getElementsByClassName('img' + gallery + galleryIndex + idx)\n      }\n    })\n  }\n\n  // this builds each gallery option for the user to select\n  function buildGalleryButtons () {\n    // tablet display active selected button\n    var selectedButton = document.createElement('button')\n    selectedButton.setAttribute('class', 'selected-gallery dropdown-button active')\n    selectedButton.setAttribute('aria-label', 'click for dropdown menu options')\n    buttonContainer.appendChild(selectedButton)\n\n    objectProperyNames.forEach(function (galleryName, idx) {\n      var isActiveGallery = objectProperyNames[idx] === selectedGallery\n      var galleryNamingConvention = galleryName + galleryIndex + idx\n      // this creates buttons for desktop\n      var buttonElement = document.createElement('button')\n      isActiveGallery\n        ? buttonElement.setAttribute('class', galleryNamingConvention)\n        : buttonElement.setAttribute('class', galleryNamingConvention)\n      buttonElement.innerText = objectProperyNames[idx]\n      buttonElement.setAttribute('aria-label', galleriesJSON[galleryName][0].galleryButtonAriaLabel)\n      buttonElement.onclick = function () {\n        changeGallery(galleryName, idx)\n        changeInfoSection(galleryName)\n      }\n      // this creates styled dropdown for mobile\n      var dropDownElement = document.createElement('button')\n      dropDownElement.setAttribute('class', galleryNamingConvention)\n      dropDownElement.innerText = objectProperyNames[idx]\n      dropDownElement.setAttribute('aria-label', galleriesJSON[galleryName][0].galleryButtonAriaLabel)\n      dropDownElement.onclick = function () {\n        changeGallery(galleryName, idx)\n        changeInfoSection(galleryName)\n      }\n      buttonContainer.appendChild(buttonElement)\n      buttonContainer.appendChild(dropDownElement)\n\n      // have to do this because IE\n      var currentButton = document.getElementsByClassName(galleryNamingConvention)\n      currentButton[currentButton.length - 2].classList.add('info-button')\n      currentButton[currentButton.length - 1].classList.add('dropdown-button')\n      if (isActiveGallery) {\n        currentButton[currentButton.length - 2].classList.add('active')\n      }\n\n      if (idx === 0) {\n        // sets the initial active button in the gallery for changing later\n        // GalleryName + indx of which gallery is being build + indx of button within gallery\n        // example: GalleryName10\n        activeGalleryButton = document.getElementsByClassName(objectProperyNames[0] + galleryIndex + '0')\n      }\n      // this populates the selected gallery button in dropdown\n      if (isActiveGallery) {\n        updateActiveGallery(idx)\n      }\n    })\n  }\n  // this initially function populates gallery on load\n  // only begins build is galleriesJSON is not false\n  if (galleriesJSON) {\n    // have to do this because of IE >:[\n    var galleryValues = Object.keys(galleriesJSON).map(function (gallery) {\n      return galleriesJSON[gallery]\n    })\n    var lastGalleryEmpty =\n      galleriesHTMLCollection[galleryIndex].children[0].children[0].children[1].children.length === 0\n\n    if (lastGalleryEmpty) {\n      // this loops through array of galleries\n      galleryValues.forEach(function (gallery, index) {\n        var onlyRunForFirstGallery = index === 0\n        if (onlyRunForFirstGallery) {\n          selectedGallery = objectProperyNames[index]\n          // this loops through each gallery in the JSON\n          buildGallery(selectedGallery)\n          // this builds buttons\n          buildGalleryButtons()\n          // this builds info section\n          changeInfoSection(selectedGallery)\n        }\n      })\n    }\n  }\n}\n\nexport function buildGallery () {\n  var galleriesJSON = document.getElementsByClassName('galleries')\n  var imageContainer // container for gallery images HTML element\n  var bulletContainer // container for image bullet buttons HTML element\n  var buttonContainer // container for gallery buttons HTML element\n\n  if (galleriesJSON !== null && galleriesJSON.length !== 0) {\n    var arrayFromGalleriesJson = Object.keys(galleriesJSON).map(function (gallery) {\n      return galleriesJSON[gallery]\n    })\n    arrayFromGalleriesJson.forEach(function (gallery, idx) {\n      gallery.id = 'galleries' + idx\n      imageContainer = document.getElementsByClassName('image-container')[idx]\n      bulletContainer = document.getElementsByClassName('bullet-container')[idx]\n      buttonContainer = document.getElementsByClassName('selection-container-btn')[idx]\n      var scriptInnerText = JSON.parse(document.getElementById(galleriesJSON[idx].id).innerText)\n\n      imageContainer.innerHTML = ''\n      bulletContainer.innerHTML = ''\n      buttonContainer.innerHTML = ''\n\n      var galleryData = {\n        galleryIndex: idx,\n        imageContainer: imageContainer,\n        bulletContainer: bulletContainer,\n        buttonContainer: buttonContainer,\n        galleriesJSON: scriptInnerText\n      }\n\n      buildSingleGallery(galleryData)\n    })\n  } else {\n    galleriesJSON = false\n  }\n}\nexport function buildJSON (templateData) {\n  let eachGallery = {}\n\n  // builds object in array\n  if (templateData.groups) {\n    templateData.groups.forEach(gallery => {\n      let galleryName = gallery.galleryName ? gallery.galleryName.value : 'Gallery Name'\n      let infoTitle = gallery.infoTitle ? gallery.infoTitle.value : 'Info Title'\n      let ariaLabel = gallery.galleryName ? gallery.galleryName.value : 'Gallery Name'\n      let infoBodyText = gallery.infoBodyText ? gallery.infoBodyText.value : 'Info Body text'\n      eachGallery[galleryName] = [\n        {\n          galleryButtonAriaLabel: ariaLabel,\n          infoTitle: infoTitle,\n          infoText: infoBodyText\n        }\n      ]\n      let groupArray = Object.getOwnPropertyNames(gallery)\n      let images = []\n      let altText = []\n      groupArray.forEach((item, idx) => {\n        if (item.includes('image') || item.includes('imgAltText')) {\n          if (item.includes('image')) {\n            let position = item.substr(item.length - 1)\n            images[position] = gallery[item].value\n          }\n          if (item.includes('imgAltText')) {\n            let position = item.substr(item.length - 1)\n            altText[position] = gallery[item].value\n          }\n        }\n      })\n      images.forEach((image, idx) => {\n        let imageObject = {\n          imageSource:\n            image || 'https://dev.woodlanddirect.com/learningcenter/pagebuilder+/svgs/placeholder-img-grey.svg',\n          altTag: altText[idx] || '',\n          selected: idx === 0\n        }\n        eachGallery[galleryName].push(imageObject)\n      })\n    })\n  } else {\n    eachGallery['GalleryName'] = [\n      {\n        galleryButtonAriaLabel: 'Gallery Name',\n        infoTitle: 'Info Title',\n        infoText: 'Info Body Text Here'\n      },\n      {\n        imageSource: 'https://dev.woodlanddirect.com/learningcenter/pagebuilder+/svgs/placeholder-img-grey.svg',\n        altTag: 'imgAltText',\n        selected: true\n      }\n    ]\n  }\n  return eachGallery\n}\n\nexport const getEmptyInputs = (data, inputs) => {\n  // get inputs with class of input\n  // these are none grouped inputs\n  let incompleteFields = {}\n  if (inputs.length > 0) {\n    for (let x = 0; x < inputs.length; x++) {\n      // see if current input is already saved to the data array, required and as no value\n      if (inputs[x].required && inputs[x].value === '' && !data[inputs[x].name]) {\n        incompleteFields[inputs[x].name] = { value: '', error: false }\n      }\n    }\n    // fields that need filled out\n    return incompleteFields\n  }\n}\n\nexport const getGroupInputs = (data, groups) => {\n  let numberOfInputs = groups.length\n  let newGroups = []\n  if (groups && numberOfInputs > 0) {\n    let numberOfGroups = Number(groups[numberOfInputs - 1].classList[1])\n    for (let x = 0; x < numberOfGroups; x++) {\n      let group = {}\n      for (let y = 0; y < numberOfInputs; y++) {\n        if (data.groups && data.groups[x] && data.groups[x][groups[y].name]) {\n          group[groups[y].name] = data.groups[x][groups[y].name]\n        } else if (Number(groups[y].classList[1]) === x + 1) {\n          group[groups[y].name] = { value: '', error: false }\n        }\n      }\n      newGroups.push(group)\n    }\n  }\n  return newGroups\n}\n\nexport const getErrorData = (clonedData, clonedGroups, incompleteFields) => {\n  let errorPresent = false\n  // if groups are present see if error is in stored data\n  if (clonedGroups.length > 0) {\n    clonedGroups.forEach((groups, idx) => {\n      let groupArray = Object.getOwnPropertyNames(groups)\n      groupArray.forEach(input => {\n        if (clonedGroups[idx][input].error === false) {\n          errorPresent = true\n        }\n      })\n    })\n    clonedData.groups = clonedGroups\n  }\n  // see if error is present in stored data\n  if (Object.getOwnPropertyNames(clonedData).length > 0) {\n    let arrayData = Object.getOwnPropertyNames(clonedData)\n    arrayData.forEach(input => {\n      if (input !== 'groups' && clonedData[input].error === false) {\n        errorPresent = true\n      }\n    })\n  }\n  // if incomplete fields are found add them to state\n  if (Object.getOwnPropertyNames(incompleteFields).length > 0) {\n    errorPresent = true\n    clonedData = { ...clonedData, ...incompleteFields }\n  }\n  return { clonedData, errorPresent }\n}\n","import React, { useEffect } from 'react'\nimport { PropTypes } from 'prop-types'\n\nimport { buildGallery } from '../../utils/utils'\n\nconst Gallery = props => {\n  const { templateData, id } = props\n  let backgroundDark =\n    templateData.styling.backgroundDark && templateData.styling.backgroundDark.value ? 'background-dark' : ''\n  let addPadding = templateData.styling.addPadding && templateData.styling.addPadding.value ? 'add-padding' : 'padding'\n  let sectionName = templateData.styling.sectionHeader\n    ? templateData.styling.sectionHeader.value\n    : 'Place Section Title Here'\n\n  useEffect(\n    () => {\n      buildGallery()\n    },\n    [templateData]\n  )\n\n  return (\n    <>\n      {/* // <!-- GALLERY TEMPLATE BEGIN --> */}\n      <div id={id} className={'gallery-templates background ' + backgroundDark + ' ' + addPadding}>\n        <div className={'container'}>\n          <div className={'button-section'}>\n            <h2>{sectionName}</h2>\n            <div id={'selection-container-btn'} className={'selection-container-btn'}>\n              <button id={'selected-gallery'} className={'selected-gallery dropdown-button active'} />\n              {/* <!-- Buttons will generate here --> */}\n            </div>\n          </div>\n          <div className={'gallery-section'}>\n            <h3 className={'info-header title-center-mobile'}>{/* <!-- Info header will generate here --> */}</h3>\n\n            <div id={'image-container'} className={'image-container'}>\n              {/* <!-- Images will generate here --> */}\n            </div>\n            <div id={'bullet-container'} className={'bullet-container'}>\n              {/* <!-- Bullets will generate here --> */}\n            </div>\n          </div>\n          <div className={'info-section'}>\n            <h3 className={'info-header title-desktop'}>{/* <!-- Info header will generate here --> */}</h3>\n            <p id={'info-body'} className={'info-body'}>\n              {/* <!-- Info body will generate here --> */}\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {/* // <!-- ONLY THE SCRIPT BELOW WILL BE EDITED -->\n  // <!-- STEPS -->\n  // <!--\n  //   NOTE: DO NOT REMOVE QUOTATIONS WHEN EDITING. CHANGE TEXT BETWEEN QUOTATIONS AND AFTER COLONS ONLY\n  //   1. Assign gallery name where it says 'Assign Gallery Name' (regarding the above warning, this one is actually before the colon ;P)\n  //   2. The first group of text between the curly brackets {} is the info for the section.\n  //     a. 'galleryButtonAriaLabel' is the aria-label text for the buttons on the left.\n  //         - Edit the text between the quotations to assign the text\n  //     b. 'infoTitle' is the smaller header of the section\n  //         - Edit the text between the quotations to assign the text\n  //     c. 'infoText' is the description/body text for the information area\n  //         - Edit the text between the quotations to assign the text\n  //         - If you need a space between paragraphs add two break tags <br><br>\n  //   3. The remaining curly brackets {} are for the photo gallery\n  //     a. 'imageSource' is the url for the image\n  //         - Edit the text between the quotations to assign the url\n  //     b. 'altTag' is the alt text for the images\n  //         - Edit the text between the quotations to assign the text\n  //     c. 'selected' please don't edit this. :)\n\n  //  ADD ANOTHER GALLERY\n  //  1. After last bracket ] past the following code from comma to end bracket:\n  //   ,\n  //  \"Assign Gallery Name\": [\n  //         {\n  //           \"galleryButtonAriaLabel\": \"add aria-label text for button here\",\n  //           \"infoTitle\": \"place info section title here\",\n  //           \"infoText\": \"place info body text here\"\n  //         },\n  //         {\n  //           \"imageSource\": \"https://via.placeholder.com/700\",\n  //           \"altTag\": \"alt tag text here\",\n  //           \"selected\": true\n  //         }\n  //       ]\n\n  //  ADDING AND REMOVING IMAGES FROM GALLERY\n  //  1. TO ADD:\n  //     a. Copy this, from comma to closing curly bracket\n  //         ,{\n  //           \"imageSource\": \"https://via.placeholder.com/600\",\n  //           \"altTag\": \"alt tag text here\",\n  //           \"selected\": false\n  //         }\n  //     b. Paste this after the first closing curly brace } of the last image set\n  // `2. TO REMOVE\n  //     a. Remove everything from the comma seperating the curly brackets {} to the last curly bracket } (The same amount that you would copy and paste from above)\n\n  //  --> */}\n      <script\n        className={'galleries'}\n        type='application/json'\n        dangerouslySetInnerHTML={{ __html: JSON.stringify(templateData.JSON) }}\n      />\n      {/* // <!-- GALLERY TEMPLATE END --> */}\n    </>\n  )\n}\n\nGallery.propTypes = {\n  templateData: PropTypes.object,\n  id: PropTypes.string\n}\n\nexport default Gallery\n","import React from 'react'\nimport { PropTypes } from 'prop-types'\n\nconst LargeImage = props => {\n  const { templateData, id } = props\n\n  let backgroundDark = templateData.backgroundDark && templateData.backgroundDark.value ? 'background-dark' : ''\n  let addPadding = templateData.addPadding && templateData.addPadding.value ? 'add-padding' : 'padding'\n\n  let image = templateData.image ? templateData.image.value : 'https://dev.woodlanddirect.com/learningcenter/pagebuilder+/svgs/grey-img-icon.svg'\n  let altText = templateData.altText ? templateData.altText.value : ''\n  return (\n    // <!-- START LARGE IMAGE TEMPLATE -->\n    <div id={id} className={'large-image-temp ' + backgroundDark + ' ' + addPadding}>\n      <img src={image} alt={altText} />\n    </div>\n    //* <!-- END LARGE IMAGE TEMPLATE --> */\n  )\n}\n\nLargeImage.propTypes = {\n  templateData: PropTypes.object,\n  id: PropTypes.string\n}\n\nexport default LargeImage\n","import React from 'react'\nimport { PropTypes } from 'prop-types'\n\nconst Linking = props => {\n  const { templateData, id } = props\n\n  let backgroundDark = templateData.backgroundDark && templateData.backgroundDark.value ? 'background-dark' : ''\n  let addPadding = templateData.addPadding && templateData.addPadding.value ? 'add-padding' : 'padding'\n\n  let image = templateData.image\n    ? templateData.image.value\n    : 'https://dev.woodlanddirect.com/learningcenter/pagebuilder+/svgs/grey-img-icon.svg'\n  let altText = templateData.altText ? templateData.altText.value : ''\n  let title = templateData.title ? templateData.title.value : 'Place Title Here'\n\n  let paragraphs =\n    templateData.groups && templateData.groups[0]\n      ? Object.values(templateData.groups[0])\n      : [{ value: 'place paragraph text here' }]\n\n  return (\n    // <!-- START OF LINKING TEMPLATE -->\n    <div id={id} className={'linking-temp ' + backgroundDark + ' ' + addPadding}>\n      <div className='linking-temp-cont'>\n        <div className='image-text-container'>\n          <img src={image} alt={altText} />\n          <div className='linking-text-container'>\n            <h3>{title}</h3>\n            {/* <!-- below add/remove p tags for more/less paragraph breaks --> */}\n            <div className='linking-text'>\n              {/* <!-- BEGINNING OF PARAGRAPH SECTION --> */}\n              {paragraphs.map((p, idx) => {\n                return <p key={idx} dangerouslySetInnerHTML={{ __html: p.value }} />\n              })}\n              {/* <!-- END OF PARAGRAPH SECTION --> */}\n            </div>\n          </div>\n        </div>\n        <div className='linking-guide'>\n          {/* <!-- below are links to sections of your page -->\n        <!-- replace each #section-id with the section's id you wish to link to  -->\n        <!-- max of 6 links allowed, remove any a tag not used -->\n        <!-- START OF ANCHOR SECTION --> */}\n          {templateData.groups ? (\n            // eslint-disable-next-line\n            templateData.groups.map((item, idx) => {\n              if (templateData.groups.indexOf(item) > 0) {\n                let link = item.link ? item.link.value : '#section-id'\n                let ariaLabel = item.ariaLabel ? item.ariaLabel.value : ''\n                let anchorTitle = item.anchorTitle ? item.anchorTitle.value : 'Anchor Link Title 1'\n                return (\n                  <a key={idx} href={link} aria-label={ariaLabel}>\n                    {anchorTitle}\n                  </a>\n                )\n              }\n            })\n          ) : (\n            <a href='#section-id' aria-label=''>\n              Anchor Link Title 1\n            </a>\n          )}\n\n          {/* <!-- END OF ANCHOR SECTION --> */}\n        </div>\n      </div>\n    </div>\n    // <!-- END OF LINKING TEMPLATE -->\n  )\n}\n\nLinking.propTypes = {\n  templateData: PropTypes.object,\n  id: PropTypes.string\n}\n\nexport default Linking\n","import React from 'react'\nimport { PropTypes } from 'prop-types'\n\nconst OneImageText = props => {\n  const { templateData, id } = props\n\n  let backgroundDark = templateData.backgroundDark && templateData.backgroundDark.value ? 'background-dark' : ''\n  let addPadding = templateData.addPadding && templateData.addPadding.value ? 'add-padding' : 'padding'\n\n  let image = templateData.image\n    ? templateData.image.value\n    : 'https://dev.woodlanddirect.com/learningcenter/pagebuilder+/svgs/grey-img-icon.svg'\n  let altText = templateData.altText ? templateData.altText.value : ''\n  let title = templateData.title ? templateData.title.value : 'Place Title Here'\n\n  return (\n    // <!-- START ONE IMAGE-TEXT-TEMPLATE HERE-->\n    <div id={id} className={'one-image-text ' + backgroundDark + ' ' + addPadding}>\n      <div className='one-image-text-cont'>\n        <img src={image} alt={altText} />\n        <div className='text-container'>\n          <h3>{title}</h3>\n          {/* <!-- you can add/remove the p tags (each one represents a paragraph break) -->\n    <!-- start p tags --> */}\n          {templateData.groups ? (\n            templateData.groups.map((item, idx) => {\n              let paragraph = item.paragraph ? item.paragraph.value : 'place paragraph text here'\n              return <p key={idx} dangerouslySetInnerHTML={{__html: paragraph}}/>\n            })\n          ) : (\n            <p>{'place paragraph here'}</p>\n          )}\n          {/* <!-- end p tags --> */}\n        </div>\n      </div>\n    </div>\n    // <!-- END ONE IMAGE-TEXT-TEMPLATE HERE--></div>\n  )\n}\n\nOneImageText.propTypes = {\n  templateData: PropTypes.object,\n  id: PropTypes.string\n}\n\nexport default OneImageText\n","import React from 'react'\nimport { PropTypes } from 'prop-types'\n\nconst Product = props => {\n  const { templateData, id } = props\n\n  let backgroundDark = templateData.backgroundDark && templateData.backgroundDark.value ? 'background-dark' : ''\n  let productWhite = templateData.backgroundDark && templateData.backgroundDark.value ? 'product-white' : ''\n  let addPadding = templateData.addPadding && templateData.addPadding.value ? 'add-padding' : 'padding'\n\n  return (\n    // <!-- START PRODUCT LIST TEMPLATE -->\n    <div id={id} className={'product-list-temp ' + backgroundDark + ' ' + addPadding}>\n      <div className={'product-container'}>\n        {/* <!-- add/remove products as needed -->\n    <!-- single product starts here (for copying and pasting) --> */}\n        {templateData.groups ? (\n          templateData.groups.map((product, idx) => {\n            let image = product.image\n              ? product.image.value\n              : 'https://dev.woodlanddirect.com/learningcenter/pagebuilder+/svgs/grey-img-icon.svg'\n            let altText = product.altText ? product.altText.value : ''\n            let productName = product.productName ? product.productName.value : 'Place Title Here'\n            let price = product.price ? product.price.value : ' price here'\n            let productPage = product.productPage ? product.productPage.value : 'https://www.woodlanddirect.com'\n            return (\n              <a key={idx} className={'single-product ' + productWhite} href={productPage} target={'__blank'}>\n                <img src={image} alt={altText} />\n                <h4>{productName}</h4>\n                <p>Starting at</p>\n                <p>{'$' + price}</p>\n              </a>\n            )\n          })\n        ) : (\n          <a className={'single-product ' + productWhite} href={'https://www.woodlanddirect.com'} target={'__blank'}>\n            <img src={'https://dev.woodlanddirect.com/learningcenter/pagebuilder+/svgs/grey-img-icon.svg'} alt={''} />\n            <h4>{'Place Title Here'}</h4>\n            <p>Starting at</p>\n            <p>{'$ price here'}</p>\n          </a>\n        )}\n\n        {/* <!-- single product ends here (copy between comments) -->\n    <!-- product begins -->\n    <!-- put product link in single quotes where the home page link is --> */}\n        {/* <!-- COPY AND PASTE ANY OTHER PRODUCTS BEFORE THIS COMMENT --> */}\n      </div>\n    </div>\n    /* <!-- END PRODUCT LIST TEMPLATE --> */\n  )\n}\n\nProduct.propTypes = {\n  templateData: PropTypes.object,\n  id: PropTypes.string\n}\n\nexport default Product\n","import React from 'react'\nimport { PropTypes } from 'prop-types'\n\nconst Quote = props => {\n  const { templateData, id } = props\n  // let defaultDisplay = !templateData['feedBackLayout'] && !templateData['faqLayout'] && !templateData['proTipLayout']\n  let backgroundDark = templateData.backgroundDark && templateData.backgroundDark.value ? 'background-dark' : ''\n  let addPadding = templateData.addPadding && templateData.addPadding.value ? 'add-padding' : 'padding'\n  // let faqTemplate = templateData['faqLayout'] && templateData['faqLayout'].value === true\n  let icon = templateData.icon ? templateData.icon.value : 'https://dev.woodlanddirect.com/learningcenter/pagebuilder+/svgs/pro-tip-icon.svg'\n  let altText\n  if (templateData.icon && templateData.icon.value === 'https://dev.woodlanddirect.com/learningcenter/pagebuilder+/svgs/question-icon.svg') {\n    altText = 'question mark icon'\n  } else if (templateData.icon && templateData.icon.value === 'https://dev.woodlanddirect.com/learningcenter/pagebuilder+/svgs/feedback-icon.svg') {\n    altText = 'star icon'\n  } else {\n    altText = 'wrench icon'\n  }\n  let header = templateData.header ? templateData.header.value : 'place title here'\n  let bodyText = templateData.bodyText ? templateData.bodyText.value : 'add text here'\n\n  return (\n    // <!-- START QUOTES TEMPLATE -->\n    <div id={id } className={'quotes-template ' + backgroundDark + ' ' + addPadding}>\n      {/* <!-- ADD/REMOVE TEMPLATES AS NEEDED -- DO NOT CHANGE OUT IMAGES-->\n  <!-- QUESTION TEMPLATE STARTS --> */}\n        <div className='single-quote-cont'>\n          <div className='title-container'>\n            <img\n              src={icon}\n              alt={altText}\n            />\n            {/* <!-- start quote title --> */}\n            <h3>{header}</h3>\n            {/* <!-- end quote title --> */}\n          </div>\n          {/* <!-- START add/remove p tags as needed --> */}\n          <p>{bodyText}</p>\n          {/* <!-- end of paragraphs --> */}\n        </div>\n      {/* <!-- QUESTION TEMPLATE ENDS -->\n      {/* <!-- CUSTOMER FEEDBACK TEMPLATE ENDS --> */}\n    </div>\n    /* <!-- END QUOTES TEMPLATE --> */\n  )\n}\n\nQuote.propTypes = {\n  templateData: PropTypes.object,\n  id: PropTypes.string\n}\n\nexport default Quote\n","import React from 'react'\nimport { PropTypes } from 'prop-types'\n\nconst SingleButton = props => {\n  const { templateData, id } = props\n\n  let backgroundDark = templateData.backgroundDark && templateData.backgroundDark.value ? 'background-dark' : ''\n  let addPadding = templateData.addPadding && templateData.addPadding.value ? 'add-padding' : 'padding'\n  let href = templateData.href ? templateData.href.value : 'place link here'\n  let ariaLabel = templateData.ariaLabel ? templateData.ariaLabel.value : ''\n  let buttonText = templateData.buttonText ? templateData.buttonText.value : 'press this button'\n\n  return (\n  // <!-- START SINGLE BUTTON -->\n\n    <div id={id} className={'button-text-template ' + backgroundDark + ' ' + addPadding}>\n      <a className='button-link' href={href} aria-label={ariaLabel}>\n        <button className='template-button'>{buttonText}</button>\n      </a>\n    </div>\n\n  // <!-- END SINGLE BUTTON -->\n  )\n}\n\nSingleButton.propTypes = {\n  templateData: PropTypes.object,\n  id: PropTypes.string\n}\n\nexport default SingleButton\n","import React from 'react'\nimport { PropTypes } from 'prop-types'\n\nconst TextOnly = props => {\n  const { templateData, id } = props\n  let backgroundDark = templateData.backgroundDark && templateData.backgroundDark.value ? 'background-dark' : ''\n  let addPadding = templateData.addPadding && templateData.addPadding.value ? 'add-padding' : 'padding'\n\n  let title = templateData.title ? templateData.title.value : 'place an amazing section title here'\n  return (\n    // <!-- START OF TEXT ONLY TEMPLATE -->\n    <div id={id} className={'text-only-temp ' + backgroundDark + ' ' + addPadding}>\n      <div className='text-only-temp-cont'>\n        <h3>{title}</h3>\n        {/* <!-- start paragraphs here -->\n  <!-- add/remove p tags as needed--> */}\n        {templateData.groups ? (\n          templateData.groups.map((item, idx) => {\n            let paragraph = item.paragraph ? item.paragraph.value : 'place paragraph text here'\n            return <p key={idx} dangerouslySetInnerHTML={{__html: paragraph}}/>\n          })\n        ) : (\n          <p>{'place paragraph here'}</p>\n        )}\n\n        {/* <!-- end paragraphs here --> */}\n      </div>\n    </div>\n    // <!-- END OF TEXT ONLY TEMPLATE -->\n  )\n}\n\nTextOnly.propTypes = {\n  templateData: PropTypes.object,\n  id: PropTypes.string\n}\n\nexport default TextOnly\n","import React from 'react'\nimport { PropTypes } from 'prop-types'\n\nconst ThreeImage = props => {\n  const { templateData, id } = props\n  let backgroundDark = templateData.backgroundDark && templateData.backgroundDark.value ? 'background-dark' : ''\n  let addPadding = templateData.addPadding && templateData.addPadding.value ? 'add-padding' : 'padding'\n\n  let title = templateData.title ? templateData.title.value : 'Place section title here'\n  let image1 = templateData.image1\n    ? templateData.image1.value\n    : 'https://dev.woodlanddirect.com/learningcenter/pagebuilder+/svgs/grey-img-icon.svg'\n  let altText1 = templateData.altText1 ? templateData.altText1.value : ''\n  let subheader1 = templateData.subheader1 ? templateData.subheader1.value : 'place info item title here'\n\n  let image2 = templateData.image2\n    ? templateData.image2.value\n    : 'https://dev.woodlanddirect.com/learningcenter/pagebuilder+/svgs/grey-img-icon.svg'\n  let altText2 = templateData.altText2 ? templateData.altText2.value : ''\n  let subheader2 = templateData.subheader2 ? templateData.subheader2.value : 'place info item title here'\n\n  let image3 = templateData.image3\n    ? templateData.image3.value\n    : 'https://dev.woodlanddirect.com/learningcenter/pagebuilder+/svgs/grey-img-icon.svg'\n  let altText3 = templateData.altText3 ? templateData.altText3.value : ''\n  let subheader3 = templateData.subheader3 ? templateData.subheader3.value : 'place info item title here'\n\n  // setting values for first, second, third, and fourth set of paragraphs for mapping through later\n  let first =\n    templateData.groups && templateData.groups[0]\n      ? Object.values(templateData.groups[0])\n      : [{ value: 'put paragraph text here' }]\n  let second =\n    templateData.groups && templateData.groups[1]\n      ? Object.values(templateData.groups[1])\n      : [{ value: 'put paragraph text here' }]\n  let third =\n    templateData.groups && templateData.groups[2]\n      ? Object.values(templateData.groups[2])\n      : [{ value: 'put paragraph text here' }]\n\n  return (\n    // <!-- START OF THREE IMG TEMPLATE  -->\n    <div id={id} className={'three-img-temp ' + backgroundDark + ' ' + addPadding}>\n      <h3>{title}</h3>\n      <div className='three-img-text'>\n        <div className='img-text-container'>\n          <img src={image1} alt={altText1} />\n          <h4>{subheader1}</h4>\n          <div className='read-more-container'>\n            {/* <!-- add/remove p tags as needed -->\n        <!-- START of p tags --> */}\n            {first.map((p, idx) => {\n              return <p key={idx} dangerouslySetInnerHTML={{__html: p.value}}/>\n            })}\n            {/* <!-- END of p tags --> */}\n          </div>\n          <button className={'read-more-button'}>read more</button>\n        </div>\n        <div className='img-text-container'>\n          <img src={image2} alt={altText2} />\n          <h4>{subheader2}</h4>\n          <div className='read-more-container'>\n            {/* <!-- add/remove p tags as needed -->\n        <!-- START of p tags --> */}\n            {second.map((p, idx) => {\n              return <p key={idx} dangerouslySetInnerHTML={{__html: p.value}}/>\n            })}\n            {/* <!-- END of p tags --> */}\n          </div>\n          <button className={'read-more-button'}>read more</button>\n        </div>\n        <div className='img-text-container'>\n          <img src={image3} alt={altText3} />\n          <h4>{subheader3}</h4>\n          <div className='read-more-container'>\n            {/* <!-- add/remove p tags as needed -->\n        <!-- START of p tags --> */}\n            {third.map((p, idx) => {\n              return <p key={idx} dangerouslySetInnerHTML={{__html: p.value}}/>\n            })}\n            {/* <!-- END of p tags --> */}\n          </div>\n          <button className={'read-more-button'}>read more</button>\n        </div>\n      </div>\n    </div>\n    // <!-- END OF THREE IMG TEMPLATE  -->\n  )\n}\n\nThreeImage.propTypes = {\n  templateData: PropTypes.object,\n  id: PropTypes.string\n}\n\nexport default ThreeImage\n","import React from 'react'\nimport { PropTypes } from 'prop-types'\n\nconst TwoLargeImage = props => {\n  const { templateData, id } = props\n  let backgroundDark = templateData.backgroundDark && templateData.backgroundDark.value ? 'background-dark' : ''\n  let addPadding = templateData.addPadding && templateData.addPadding.value ? 'add-padding' : 'padding'\n\n  let title = templateData.title ? templateData.title.value : 'Place section title here'\n  let image1 = templateData.image1\n    ? templateData.image1.value\n    : 'https://dev.woodlanddirect.com/learningcenter/pagebuilder+/svgs/grey-img-icon.svg'\n  let altText1 = templateData.altText1 ? templateData.altText1.value : ''\n  let subheader1 = templateData.subheader1 ? templateData.subheader1.value : 'place info item title here'\n\n  let image2 = templateData.image2\n    ? templateData.image2.value\n    : 'https://dev.woodlanddirect.com/learningcenter/pagebuilder+/svgs/grey-img-icon.svg'\n  let altText2 = templateData.altText2 ? templateData.altText2.value : ''\n  let subheader2 = templateData.subheader2 ? templateData.subheader2.value : 'place info item title here'\n\n  // setting values for first, second, third, and fourth set of paragraphs for mapping through later\n  let first =\n    templateData.groups && templateData.groups[0]\n      ? Object.values(templateData.groups[0])\n      : [{ value: 'put paragraph text here' }]\n  let second =\n    templateData.groups && templateData.groups[1]\n      ? Object.values(templateData.groups[1])\n      : [{ value: 'put paragraph text here' }]\n\n  return (\n    // <!-- START TWO LARGE IMAGE TEMPLATE -->\n    // <!-- make sure the images you choose are the same width/height, otherwise it will look weird -->\n    <div id={id} className={'two-large-image-temp ' + backgroundDark + ' ' + addPadding}>\n      <h3>{title}</h3>\n      <div className='section-cont'>\n        <div className='section-one'>\n          <img src={image1} alt={altText1} />\n          <h4>{subheader1}</h4>\n          {/* <!-- add/remove p tags to add/remove paragraphs as needed --> */}\n          {first.map((p, idx) => {\n            return <p key={idx} dangerouslySetInnerHTML={{ __html: p.value }} />\n          })}\n        </div>\n        <div className='section-two'>\n          <img src={image2} alt={altText2} />\n          <h4>{subheader2}</h4>\n          {/* <!-- add/remove p tags to add/remove paragraphs as needed --> */}\n          {second.map((p, idx) => {\n            return <p key={idx} dangerouslySetInnerHTML={{ __html: p.value }} />\n          })}\n        </div>\n      </div>\n    </div>\n    // <!-- END TWO LARGE IMAGE TEMPLATE -->\n  )\n}\n\nTwoLargeImage.propTypes = {\n  templateData: PropTypes.object,\n  id: PropTypes.string\n}\n\nexport default TwoLargeImage\n","import React from 'react'\nimport { PropTypes } from 'prop-types'\n\nconst TwoSmallImage = props => {\n  const { templateData, id } = props\n  let backgroundDark = templateData.backgroundDark && templateData.backgroundDark.value ? 'background-dark' : ''\n  let addPadding = templateData.addPadding && templateData.addPadding.value ? 'add-padding' : 'padding'\n\n  let title = templateData.title ? templateData.title.value : 'Place section title here'\n  let image1 = templateData.image1\n    ? templateData.image1.value\n    : 'https://dev.woodlanddirect.com/learningcenter/pagebuilder+/svgs/grey-img-icon.svg'\n  let altText1 = templateData.altText1 ? templateData.altText1.value : ''\n  let subheader1 = templateData.subheader1 ? templateData.subheader1.value : 'place info item title here'\n\n  let image2 = templateData.image2\n    ? templateData.image2.value\n    : 'https://dev.woodlanddirect.com/learningcenter/pagebuilder+/svgs/grey-img-icon.svg'\n  let altText2 = templateData.altText2 ? templateData.altText2.value : ''\n  let subheader2 = templateData.subheader2 ? templateData.subheader2.value : 'place info item title here'\n\n  // setting values for first, second, third, and fourth set of paragraphs for mapping through later\n  let first =\n    templateData.groups && templateData.groups[0]\n      ? Object.values(templateData.groups[0])\n      : [{ value: 'put paragraph text here' }]\n  let second =\n    templateData.groups && templateData.groups[1]\n      ? Object.values(templateData.groups[1])\n      : [{ value: 'put paragraph text here' }]\n\n  return (\n    // <!-- START TWO SMALL IMAGE TEMPLATE -->\n    <div id={id} className={'two-small-image-temp ' + backgroundDark + ' ' + addPadding}>\n      <h3>{title}</h3>\n      <div className='images-container'>\n        <div className='single-img-cont'>\n          <img src={image1} alt={altText1} />\n          <div className='caption-cont'>\n            <h4>{subheader1}</h4>\n            {/* <!-- add/remove p tags as needed --> */}\n            {first.map((p, idx) => {\n              return <p key={idx} dangerouslySetInnerHTML={{__html: p.value}}/>\n            })}\n          </div>\n        </div>\n        <div className='single-img-cont'>\n          <img src={image2} alt={altText2} />\n          <div className='caption-cont'>\n            <h4>{subheader2}</h4>\n            {/* <!-- add/remove p tags as needed --> */}\n            {second.map((p, idx) => {\n              return <p key={idx} dangerouslySetInnerHTML={{__html: p.value}}/>\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n    // <!-- END TWO SMALL IMAGE TEMPLATE -->\n  )\n}\n\nTwoSmallImage.propTypes = {\n  templateData: PropTypes.object,\n  id: PropTypes.string\n}\n\nexport default TwoSmallImage\n","import React from 'react'\nimport { PropTypes } from 'prop-types'\n\nconst Video = props => {\n  const { templateData, id } = props\n  let backgroundDark = templateData.backgroundDark && templateData.backgroundDark.value ? 'background-dark' : ''\n  let addPadding = templateData.addPadding && templateData.addPadding.value ? 'add-padding' : 'padding'\n  const convertVideo = video => {\n    return video.replace('watch?v=', 'embed/')\n  }\n  let video = templateData.video ? convertVideo(templateData.video.value) : 'https://www.youtube.com/embed/ZY3J3Y_OU0w'\n\n  return (\n    // <!-- START VIDEO TEMPLATE -->\n    <div id={id} className={'video-template ' + backgroundDark + ' ' + addPadding}>\n      <div className='video-template-cont'>\n        <div className='iframe-container'>\n          {/* <!-- FOR LINK: if using a youtube link, just replace the 'watch?v=' with 'embed/' from whichever youtube video you want: so https://www.youtube.com/watch?v=ZY3J3Y_OU0w becomes what you see below --> */}\n          <iframe src={video} frameBorder='0' width='560' height='315' title='video' />\n        </div>\n      </div>\n    </div>\n    // <!-- END VIDEO TEMPLATE -->\n  )\n}\n\nVideo.propTypes = {\n  templateData: PropTypes.object,\n  id: PropTypes.string\n}\n\nexport default Video\n","import React from 'react'\nconst Attention = () => {\n  return (\n    <svg version='1.1' x='0px' y='0px' className={'attention'} viewBox='0 0 80 80'>\n      <g>\n        <g transform='translate(50 50) scale(0.69 0.69) rotate(0) translate(-50 -50)'>\n          <g transform='translate(0 -292.77)'>\n            <path\n              fill={'#CC3300'}\n              d='M35.5,278.4c-27.6,0-49.9,22.3-50,49.8c0,27.6,22.4,50,50,50s50-22.4,50-50c0-27.6-22.4-50-50-50V278.4z\n\t\t\t\t M35.4,297.2c3.5-0.1,6.3,2.7,6.3,6.2c0,0.1,0,0.1,0,0.2v31.1c0,3.5-2.7,6.3-6.2,6.3s-6.3-2.7-6.3-6.2c0-0.1,0-0.1,0-0.2v-31.1\n\t\t\t\tC29.2,300.1,32,297.2,35.4,297.2z M35.4,345.8c4.3,0,7.8,3.5,7.8,7.8c0,4.3-3.5,7.8-7.8,7.8c-4.3,0-7.8-3.5-7.8-7.8\n\t\t\t\tC27.5,349.3,31,345.8,35.4,345.8z'\n            />\n          </g>\n        </g>\n      </g>\n    </svg>\n  )\n}\nexport default Attention\n","import Validator from 'validator'\n\nconst Validation = {\n  image: data => {\n    return isUrl(data)\n  },\n  price: data => {\n    return isNumber(data)\n  },\n  productPage: data => {\n    return isUrl(data)\n  },\n  video: data => {\n    return isUrl(data)\n  },\n  href: data => {\n    return isUrl(data)\n  }\n}\n\nfunction isUrl (data) {\n  let isEmpty = Validator.isEmpty(data)\n  if (!isEmpty) {\n    let isUrl = Validator.isURL(data, { protocols: ['http', 'https'], require_protocol: true })\n    return [isUrl, '*Invalid url. Must contain https:// or http:// before www']\n  } else {\n    return [false, '']\n  }\n}\nfunction isNumber (data) {\n  let isEmpty = Validator.isEmpty(data)\n  if (!isEmpty) {\n    let isNumber = Validator.isDecimal(data)\n    return [isNumber, '*Numbers only']\n  } else {\n    return [false, '']\n  }\n}\n\nfunction isNotEmpty (data) {\n  let isEmpty = Validator.isEmpty(data)\n  if (!isEmpty) {\n    return [!isEmpty, '']\n  } else {\n    return [false, '']\n  }\n}\n\nexport const doValidation = data => {\n  // get answer data\n  // call the proper validation method based on data.name... then feed it data.value\n  let isValid = true\n  let name = data.name\n  name = Validator.contains(data.name, 'image') ? 'image' : name\n  isValid = Validation[name] ? Validation[name](data.value) : isNotEmpty(data.value)\n  return isValid\n}\n","import styled from 'styled-components'\n\nexport const EntryContainer = styled.div`\n  position: relative;\n  width: ${props => (props.label.includes('Image') || props.label.includes('Alt') || (props.label.includes('Button')&& props.label.includes('URL')) || props.label.includes('Button Aria Label') ? '49%' : '100%')};\n  padding-left: 5px;\n  .attention {\n    position: absolute;\n    width: 20px;\n    top: 20px;\n    right: 10px;\n  }\n`\n\nexport const Label = styled.label`\n  position: absolute;\n  font-family: ${props => props.theme.fontBody};\n  font-size: ${props => (props.selected ? '14px' : '14px')};\n  font-weight: normal !Important; /* this is to override core */\n  top: ${props => (props.type !== 'checkbox' ? '20px' : '3px')};\n  left: ${props => (props.type !== 'checkbox' ? '15px' : '25px')};\n  cursor: text;\n  pointer-events: none;\n  color: ${props => (props.type !== 'checkbox' && props.selected ? props.theme.accentSecondary : '#999')};\n  ${props =>\n    props.type !== 'checkbox' && props.selected\n      ? `\n    pointer-events: none;\n    transform: translateZ(0) scale(1);\n    transition: all .25s ease-in-out;\n    transform-origin: left top 0;\n    transform: translate3d(0,-9px,0) scale(.8);`\n      : `\n    transform-origin: 0;\n    transition: all .25s ease-in-out;\n    transform: translate3d(0,0,0) scale(1);`}\n  ${props =>\n    props.type !== 'checkbox' && props.value && props.value.length >= 1\n      ? `\n    pointer-events: none;\n    transform: translateZ(0) scale(1);\n    transition: all .25s ease-in-out;\n    transform-origin: left top 0;\n    transform: translate3d(0,-9px,0) scale(.8);`\n      : ' '}\n`\n\nlet entryStyles = props => {\n  let entryStyle = `\n    box-sizing: border-box;\n    font-family: ${props.theme.fontBody};\n    font-size: 14px;\n    line-height: 20px;\n    margin-bottom: 10px;\n    padding:25px 5px 10px 15px;\n    outline: none;\n    border: ${props.error !== false ? `1px solid ${props.theme.background}` : '1px solid red'};\n    width:fill-available;\n\n  `\n  return entryStyle\n}\n\nexport const Input = styled.input`\n  ${props => entryStyles(props)}\n`\nexport const TextArea = styled.textarea`\n  ${props => entryStyles(props)}\n  min-width: 400px;\n`\n\nexport const ErrorMessage = styled.div`\n  color: red;\n  font-size: 12px;\n  padding: 0px 10px 10px;\n`\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nimport Attention from './parts/Attention'\nimport { doValidation } from '../../utils/validation'\nimport { EntryContainer, Input, Label, TextArea, ErrorMessage } from './formEntryStyles'\n// import { doValidation } from '../../../../globals/services/validation'\n\nconst FormEntry = props => {\n  const { name, required, type, group, updateFormData, textArea, checked } = props\n  let storedValue = props.value\n  let storedError = props.error\n  let label = props.required ? props.label : props.label + ' (Optional)'\n  const [inputValue, setValue] = useState(storedValue)\n  const [selected, setSelected] = useState(false)\n  const [noError, setNoError] = useState(storedError)\n  const [errorMessage, setErrorMessage] = useState('')\n\n  useEffect(\n    () => {\n      // update useState as prop type updates\n      setNoError(storedError)\n    },\n    [storedError]\n  )\n  useEffect(\n    () => {\n      // update useState as prop type updates\n      setValue(storedValue)\n    },\n    [storedValue]\n  )\n  const handleBlur = () => {\n    let isValid = null\n    if (required) {\n      // validate function and setError\n\n      let validation = doValidation({ name, value: inputValue })\n      isValid = validation[0]\n      setErrorMessage(validation[1])\n      setNoError(isValid)\n    }\n    setSelected(false)\n    // update higher state\n    if (inputValue !== '') {\n      if (group) {\n        updateFormData({ name, value: inputValue, group, error: isValid })\n      } else {\n        updateFormData({ name, value: inputValue, error: isValid })\n      }\n    }\n  }\n  let checkedValue = type === 'radio' ? checked : inputValue\n  const handleChange = target => {\n    let newValue\n    if (type === 'radio') {\n      checkedValue = true\n      newValue = target.value\n      updateFormData({ name, value: newValue})\n    }\n    if (type === 'checkbox') {\n      newValue = target.checked\n    } else {\n      newValue = target.value\n    }\n    setValue(newValue)\n  }\n  const classGroup = group ? 'groups ' + group : 'input'\n  \n  return (\n    <EntryContainer className={'entry-container ' + name} label={label}>\n      <Label className={'entry-label'} type={type === 'radio' ? 'checkbox' : type} label={label} selected={selected} value={inputValue}>\n        {label}\n      </Label>\n      {textArea ? (\n        <TextArea\n          className={classGroup}\n          value={inputValue}\n          onBlur={handleBlur}\n          onChange={e => setValue(e.target.value)}\n          onFocus={() => {\n            setNoError(true)\n            setSelected(true)\n          }}\n          type={type}\n          name={name}\n          required={required}\n          error={noError}\n        />\n      ) : (\n        <Input\n          className={classGroup}\n          value={inputValue}\n          onBlur={handleBlur}\n          onChange={e => {\n            handleChange(e.target)\n          }}\n          onFocus={() => {\n            setNoError(true)\n            setSelected(true)\n          }}\n          checked={checkedValue}\n          type={type}\n          name={name}\n          required={required}\n          error={noError}\n        />\n      )}\n      {noError === false && <Attention />}\n      {noError === false && errorMessage.length > 1 && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </EntryContainer>\n  )\n}\n\nFormEntry.propTypes = {\n  name: PropTypes.string,\n  required: PropTypes.bool,\n  type: PropTypes.string,\n  updateFormData: PropTypes.func,\n  textArea: PropTypes.bool\n}\n\nexport default FormEntry\n","import React from 'react'\nimport { PropTypes } from 'prop-types'\nimport FormEntry from '../modal/FormEntry'\n\nconst BannerModal = props => {\n  const { data, updateFormData } = props\n  return (\n    <>\n      <FormEntry\n        type={'checkbox'}\n        label={'gray background'}\n        name={'backgroundDark'}\n        error={data['backgroundDark'] ? data['backgroundDark'].error : null}\n        updateFormData={updateFormData}\n        value={data['backgroundDark'] ? data['backgroundDark'].value : false}\n      />\n      <FormEntry\n        type={'checkbox'}\n        label={'Additional Padding Top & Bottom'}\n        name={'addPadding'}\n        error={data['addPadding'] ? data['addPadding'].error : null}\n        updateFormData={updateFormData}\n        value={data['addPadding'] ? data['addPadding'].value : false}\n      />\n      <FormEntry\n        type={'input'}\n        label={'Image'}\n        name={'image'}\n        error={data['image'] ? data['image'].error : null}\n        updateFormData={updateFormData}\n        value={data['image'] ? data['image'].value : ''}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'Image Alt Text'}\n        name={'altText'}\n        error={data['altText'] ? data['altText'].error : null}\n        updateFormData={updateFormData}\n        value={data['altText'] ? data['altText'].value : ''}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'Title'}\n        name={'title'}\n        error={data['title'] ? data['title'].error : null}\n        updateFormData={updateFormData}\n        value={data['title'] ? data['title'].value : ''}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'Subtitle'}\n        name={'subheader'}\n        error={data['subheader'] ? data['subheader'].error : null}\n        updateFormData={updateFormData}\n        value={data['subheader'] ? data['subheader'].value : ''}\n        required\n      />\n    </>\n  )\n}\n\nBannerModal.propTypes = {\n  data: PropTypes.object,\n  updateFormData: PropTypes.func\n}\n\nexport default BannerModal\n","import React from 'react'\nimport { PropTypes } from 'prop-types'\nimport FormEntry from '../modal/FormEntry'\nconst ButtonTextModal = props => {\n  const { updateFormData, data } = props\n  return (\n    <>\n      <FormEntry\n        type={'checkbox'}\n        label={'gray background'}\n        name={'backgroundDark'}\n        error={null}\n        updateFormData={updateFormData}\n        value={data['backgroundDark'] ? data['backgroundDark'].value : false}\n      />\n      <FormEntry\n        type={'checkbox'}\n        label={'Additional Padding Top & Bottom'}\n        name={'addPadding'}\n        error={null}\n        updateFormData={updateFormData}\n        value={data['addPadding'] ? data['addPadding'].value : false}\n      />\n      <FormEntry\n        type={'input'}\n        label={'Call To Action Text'}\n        name={'callToAction'}\n        value={data['callToAction'] ? data['callToAction'].value : ''}\n        error={data['callToAction'] ? data['callToAction'].error : null}\n        updateFormData={updateFormData}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'Button Text'}\n        name={'buttonText'}\n        value={data['buttonText'] ? data['buttonText'].value : ''}\n        error={data['buttonText'] ? data['buttonText'].error : null}\n        updateFormData={updateFormData}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'URL for Button'}\n        name={'href'}\n        value={data['href'] ? data['href'].value : ''}\n        error={data['href'] ? data['href'].error : null}\n        updateFormData={updateFormData}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'Button Aria Label'}\n        name={'ariaLabel'}\n        value={data['ariaLabel'] ? data['ariaLabel'].value : ''}\n        error={data['ariaLabel'] ? data['ariaLabel'].error : null}\n        updateFormData={updateFormData}\n        required\n      />\n    </>\n  )\n}\n\nButtonTextModal.propTypes = {\n  data: PropTypes.object,\n  updateFormData: PropTypes.func\n}\n\nexport default ButtonTextModal\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledButton = styled.button`\n  margin: 5px;\n  font-size: 18px;\n  font-weight: 700;\n  height: 20px;\n  outline: none;\n  height: 45px;\n  width: 100%;\n  border: 2px solid ${props => props.theme.backgroundAccent};\n  background-color: white;\n  font-family: ${props => props.theme.fontBody};\n  text-align: center;\n  text-transform: uppercase;\n  color: ${props => props.theme.mainPrimary};\n  border-radius: 3px;\n  margin-bottom: 40px;\n  transition: 0.3s ease-in-out;\n  :hover {\n    cursor: pointer;\n    background-color: ${props => props.theme.backgroundAccent};\n  }\n`\n\nconst Button = props => {\n  const {handleClick, buttonText} = props\n  return <StyledButton onClick={handleClick}>{buttonText}</StyledButton>\n}\n\nexport default Button","import React, { useState, useEffect, Fragment } from 'react'\nimport styled from 'styled-components'\nimport { PropTypes } from 'prop-types'\nimport FormEntry from '../modal/FormEntry'\nimport Button from '../modal/parts/Button'\n\nconst ButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\nconst Section = styled.div`\n  width: 100%;\n  padding: 10px;\n  text-align: center;\n`\nconst FourImageModal = props => {\n  const { updateFormData, data, updateTemplateData } = props\n  const [pTags, setPTags] = useState([[0], [0], [0], [0]])\n  useEffect(\n    () => {\n      let clonedPtags = [...pTags]\n      if (data.groups && data.groups.length > 0) {\n        data.groups.forEach((group, idx) => {\n          let groupPosition = idx\n          let groupsArray = Object.keys(group)\n          if (Object.keys(group).length > 0) {\n            groupsArray.forEach((input, idx) => {\n              let groupArray = clonedPtags[groupPosition]\n              groupArray[idx] = idx\n            })\n          }\n        })\n        setPTags(clonedPtags)\n      }\n    },\n    [data.groups, pTags]\n  )\n  const addRemovePTags = (addParagraph, index, idx) => {\n    let createdParagraphs = [...pTags]\n    if (addParagraph) {\n      createdParagraphs[index].push(createdParagraphs[index].length)\n    } else {\n      createdParagraphs[index].splice(idx, 1)\n      let incomingDataClone = { ...data }\n      if (incomingDataClone.groups) {\n        let remove = incomingDataClone.groups[index]\n        let paragraph = 'paragraph' + idx\n        delete remove[paragraph]\n        updateTemplateData(incomingDataClone)\n      }\n    }\n    setPTags(createdParagraphs)\n  }\n\n  return (\n    <>\n      <FormEntry\n        type={'checkbox'}\n        label={'gray background'}\n        name={'backgroundDark'}\n        error={null}\n        updateFormData={updateFormData}\n        value={data['backgroundDark'] ? data['backgroundDark'].value : false}\n      />\n      <FormEntry\n        type={'checkbox'}\n        label={'Additional Padding Top & Bottom'}\n        name={'addPadding'}\n        error={null}\n        updateFormData={updateFormData}\n        value={data['addPadding'] ? data['addPadding'].value : false}\n      />\n      <FormEntry\n        type={'input'}\n        label={'Section Title'}\n        name={'title'}\n        error={data['title'] ? data['title'].error : null}\n        value={data['title'] ? data['title'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      <Section>First Image Form</Section>\n      {/* First Img Temp */}\n      <FormEntry\n        type={'input'}\n        label={'Image 1'}\n        name={'image1'}\n        error={data['image1'] ? data['image1'].error : null}\n        value={data['image1'] ? data['image1'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'Image Alt Text'}\n        name={'altText1'}\n        error={data['altText1'] ? data['altText1'].error : null}\n        value={data['altText1'] ? data['altText1'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'Sub Header'}\n        name={'subheader1'}\n        error={data['subheader1'] ? data['subheader1'].error : null}\n        value={data['subheader1'] ? data['subheader1'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      {pTags[0].map((paragraph, idx) => {\n        let valueExists = data.groups && data.groups[0] && data.groups[0]['paragraph' + idx]\n        return (\n          <Fragment key={idx}>\n            <FormEntry\n              textArea\n              type={'text'}\n              label={'Paragraph ' + (idx + 1)}\n              name={'paragraph' + idx}\n              group={1}\n              error={valueExists ? data.groups[0]['paragraph' + idx].error : null}\n              value={valueExists ? data.groups[0]['paragraph' + idx].value : ''}\n              updateFormData={updateFormData}\n              required\n            />\n            {pTags[0].length > 1 && <Button handleClick={() => addRemovePTags(false, 0, idx)} buttonText={'Remove'} />}\n          </Fragment>\n        )\n      })}\n      <ButtonContainer>\n        <Button handleClick={() => addRemovePTags(true, 0)} buttonText={'Add Paragraph'} />\n      </ButtonContainer>\n      {/* Second Img Temp */}\n      <Section>Second Image Form</Section>\n      <FormEntry\n        type={'input'}\n        label={'Image 2'}\n        name={'image2'}\n        error={data['image2'] ? data['image2'].error : null}\n        value={data['image2'] ? data['image2'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'Image Alt Text'}\n        name={'altText2'}\n        error={data['altText2'] ? data['altText2'].error : null}\n        value={data['altText2'] ? data['altText2'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'Sub Header'}\n        name={'subheader2'}\n        error={data['subheader2'] ? data['subheader2'].error : null}\n        value={data['subheader2'] ? data['subheader2'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      {pTags[1].map(idx => {\n        let valueExists = data.groups && data.groups[1] && data.groups[1]['paragraph' + idx]\n        return (\n          <Fragment key={idx}>\n            <FormEntry\n              textArea\n              type={'text'}\n              label={'Paragraph ' + (idx + 1)}\n              name={'paragraph' + idx}\n              group={2}\n              error={valueExists ? data.groups[1]['paragraph' + idx].error : null}\n              value={valueExists ? data.groups[1]['paragraph' + idx].value : ''}\n              updateFormData={updateFormData}\n              required\n            />\n            {pTags[1].length > 1 && <Button handleClick={() => addRemovePTags(false, 1, idx)} buttonText={'Remove'} />}\n          </Fragment>\n        )\n      })}\n      <ButtonContainer>\n        <Button handleClick={() => addRemovePTags(true, 1)} buttonText={'Add Paragraph'} />\n      </ButtonContainer>\n      {/* Third Img Temp */}\n      <Section>Third Image Form</Section>\n      <FormEntry\n        type={'input'}\n        label={'Image 3'}\n        name={'image3'}\n        error={data['image3'] ? data['image3'].error : null}\n        value={data['image3'] ? data['image3'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'Image Alt Text'}\n        name={'altText3'}\n        error={data['altText3'] ? data['altText3'].error : null}\n        value={data['altText3'] ? data['altText3'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'Sub Header'}\n        name={'subheader3'}\n        error={data['subheader3'] ? data['subheader3'].error : null}\n        value={data['subheader3'] ? data['subheader3'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      {pTags[2].map(idx => {\n        let valueExists = data.groups && data.groups[2] && data.groups[2]['paragraph' + idx]\n        return (\n          <Fragment key={idx}>\n            <FormEntry\n              textArea\n              type={'text'}\n              label={'Paragraph ' + (idx + 1)}\n              name={'paragraph' + idx}\n              group={3}\n              error={valueExists ? data.groups[2]['paragraph' + idx].error : null}\n              value={valueExists ? data.groups[2]['paragraph' + idx].value : ''}\n              updateFormData={updateFormData}\n              required\n            />\n            {pTags[2].length > 1 && <Button handleClick={() => addRemovePTags(false, 2, idx)} buttonText={'Remove'} />}\n          </Fragment>\n        )\n      })}\n      <ButtonContainer>\n        <Button handleClick={() => addRemovePTags(true, 2)} buttonText={'Add Paragraph'} />\n      </ButtonContainer>\n      {/* Fourth Img Temp */}\n      <Section>Fourth Image Form</Section>\n      <FormEntry\n        type={'input'}\n        label={'Image 4'}\n        name={'image4'}\n        error={data['image4'] ? data['image4'].error : null}\n        value={data['image4'] ? data['image4'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'Image Alt Text'}\n        name={'altText4'}\n        error={data['altText4'] ? data['altText4'].error : null}\n        value={data['altText4'] ? data['altText4'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'Sub Header'}\n        name={'subheader4'}\n        error={data['subheader4'] ? data['subheader4'].error : null}\n        value={data['subheader4'] ? data['subheader4'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      {pTags[3].map(idx => {\n        let valueExists = data.groups && data.groups[3] && data.groups[3]['paragraph' + idx]\n        return (\n          <Fragment key={idx}>\n            <FormEntry\n              textArea\n              type={'text'}\n              label={'Paragraph ' + (idx + 1)}\n              name={'paragraph' + idx}\n              group={4}\n              error={valueExists ? data.groups[3]['paragraph' + idx].error : null}\n              value={valueExists ? data.groups[3]['paragraph' + idx].value : ''}\n              updateFormData={updateFormData}\n              required\n            />\n            {pTags[3].length > 1 && <Button handleClick={() => addRemovePTags(false, 3, idx)} buttonText={'Remove'} />}\n          </Fragment>\n        )\n      })}\n      <ButtonContainer>\n        <Button handleClick={() => addRemovePTags(true, 3)} buttonText={'Add Paragraph'} />\n      </ButtonContainer>\n    </>\n  )\n}\n\nFourImageModal.propTypes = {\n  data: PropTypes.object,\n  updateFormData: PropTypes.func\n}\n\nexport default FourImageModal\n","import React, { Fragment, useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { PropTypes } from 'prop-types'\nimport FormEntry from '../modal/FormEntry'\nimport Button from '../modal/parts/Button'\n\nconst ButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\nconst GalleryButtons = styled.div`\n  display: flex;\n  width: 100%;\n`\nconst GalleryModal = props => {\n  const defaultGallery = [[{ images: [0] }]]\n  const { updateFormData, data, updateTemplateData, cleanOutImages } = props\n  const [galleryFormRender, setGalleryFormRender] = useState(defaultGallery)\n  useEffect(\n    () => {\n      if (data.groups) {\n        let clonedData = galleryFormRender !== [[{ images: [0] }]] ? [...galleryFormRender] : []\n        data.groups.forEach((value, idx) => {\n          let newGroup = [{ images: [0] }]\n          let groupIdx = idx\n          let names = Object.getOwnPropertyNames(value)\n          let storedImg = clonedData[idx] && clonedData[idx][0].images ? clonedData[idx][0].images : []\n          names.forEach(image => {\n            if (image.includes('image') || image.includes('imgAltText')) {\n              let position = image.substr(image.length - 1)\n              if (!storedImg[position]) {\n                storedImg[position] = Number(position)\n              }\n            }\n          })\n          newGroup[0].images = storedImg\n          !clonedData[groupIdx] ? clonedData.push(newGroup) : (clonedData[groupIdx][0].images = storedImg)\n        })\n        setGalleryFormRender(clonedData)\n      }\n    },\n    [data.groups]\n  )\n  let isMaxGalleries = galleryFormRender.length === 5\n\n  // this allows you to choose how many galleries in a section\n  const buildAllGalleryFields = (addGallery, idx) => {\n    let createdGalleries = [...galleryFormRender]\n    if (addGallery) {\n      let newGallery = [{ images: [0] }]\n      createdGalleries.push(newGallery)\n    } else {\n      createdGalleries.pop()\n      let incomingDataClone = { ...data }\n      if (incomingDataClone.groups) {\n        incomingDataClone.groups.splice(idx, 1)\n        updateTemplateData(incomingDataClone)\n      }\n    }\n    setGalleryFormRender(createdGalleries)\n  }\n\n  const buildImgFields = (idx, count) => {\n    let createdGalleries = [...galleryFormRender]\n    createdGalleries[idx][0].images = count\n    setGalleryFormRender(createdGalleries)\n    if (data.groups && data.groups[idx]) {\n      cleanOutImages(idx, count.length)\n    }\n  }\n  const groups = [\n    { label: 'Gallery Name Button', name: 'galleryName', type: 'input' },\n    { label: 'Info Title', name: 'infoTitle', type: 'input' },\n    { label: 'Info Body Text', name: 'infoBodyText', type: 'textarea' }\n  ]\n  const imageGroups = [\n    { label: 'Image Url', name: 'image', type: 'input' },\n    { label: 'Image Alt Text', name: 'imgAltText', type: 'input' }\n  ]\n  let createFields = idx => {\n    const galleryIdx = idx\n    return (\n      <Fragment key={galleryIdx}>\n        <p>Gallery {galleryIdx + 1}</p>\n        {groups.map(input => {\n          let valueExists = data.groups && data.groups[galleryIdx] && data.groups[galleryIdx][input.name]\n          return (\n            <Fragment key={input.name + galleryIdx}>\n              <FormEntry\n                type={input.type}\n                label={input.label}\n                name={input.name}\n                group={idx + 1}\n                error={valueExists ? data.groups[galleryIdx][input.name].error : null}\n                value={valueExists ? data.groups[galleryIdx][input.name].value : ''}\n                updateFormData={updateFormData}\n                required\n              />\n            </Fragment>\n          )\n        })}\n        <GalleryButtons>\n          <Button handleClick={() => buildImgFields(galleryIdx, [0])} buttonText={'1 Image'} />\n          <Button handleClick={() => buildImgFields(galleryIdx, [0, 1])} buttonText={'2 Images'} />\n          <Button handleClick={() => buildImgFields(galleryIdx, [0, 1, 2])} buttonText={'3 Images'} />\n        </GalleryButtons>\n        {galleryFormRender[galleryIdx][0]['images'] &&\n          galleryFormRender[galleryIdx][0]['images'].map(idx => {\n            return imageGroups.map(image => {\n              let valueImage = data.groups && data.groups[galleryIdx] && data.groups[galleryIdx][image.name + idx]\n              return (\n                <Fragment key={image.name + idx + galleryIdx}>\n                  <FormEntry\n                    type={image.type}\n                    label={image.label}\n                    name={image.name + idx}\n                    group={galleryIdx + 1}\n                    error={valueImage ? data.groups[galleryIdx][image.name + idx].error : null}\n                    value={valueImage ? data.groups[galleryIdx][image.name + idx].value : ''}\n                    updateFormData={updateFormData}\n                    required\n                  />\n                </Fragment>\n              )\n            })\n          })}\n        {galleryFormRender.length > 1 && (\n          <Button handleClick={() => buildAllGalleryFields(false, idx)} buttonText={'Remove Gallery'} />\n        )}\n      </Fragment>\n    )\n  }\n\n  return (\n    <>\n      <FormEntry\n        type={'checkbox'}\n        label={'gray background'}\n        name={'backgroundDark'}\n        error={null}\n        updateFormData={updateFormData}\n        value={data['backgroundDark'] ? data['backgroundDark'].value : false}\n      />\n      <FormEntry\n        type={'checkbox'}\n        label={'Additional Padding Top & Bottom'}\n        name={'addPadding'}\n        error={null}\n        updateFormData={updateFormData}\n        value={data['addPadding'] ? data['addPadding'].value : false}\n      />\n      <FormEntry\n        type={'input'}\n        label={'Section Header'}\n        name={'sectionHeader'}\n        error={data['sectionHeader'] ? data['sectionHeader'].error : null}\n        value={data['sectionHeader'] ? data['sectionHeader'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      {galleryFormRender.map((gallery, idx) => createFields(idx))}\n      <ButtonContainer>\n        {!isMaxGalleries && <Button handleClick={() => buildAllGalleryFields(true)} buttonText={'Add Gallery'} />}\n      </ButtonContainer>\n    </>\n  )\n}\n\nGalleryModal.propTypes = {\n  data: PropTypes.object,\n  updateFormData: PropTypes.func,\n  cleanOutImages: PropTypes.func\n}\n\nexport default GalleryModal\n","import React from 'react'\nimport { PropTypes } from 'prop-types'\nimport FormEntry from '../modal/FormEntry'\nconst LargeImgModal = props => {\n  const { updateFormData, data } = props\n  return (\n    <>\n      <FormEntry\n        type={'checkbox'}\n        label={'gray background'}\n        name={'backgroundDark'}\n        error={null}\n        updateFormData={updateFormData}\n        value={data['backgroundDark'] ? data['backgroundDark'].value : false}\n      />\n      <FormEntry\n        type={'checkbox'}\n        label={'Additional Padding Top & Bottom'}\n        name={'addPadding'}\n        error={null}\n        updateFormData={updateFormData}\n        value={data['addPadding'] ? data['addPadding'].value : false}\n      />\n      <FormEntry\n        type={'input'}\n        label={'Image Url'}\n        name={'image'}\n        error={data['image'] ? data['image'].error : null}\n        value={data['image'] ? data['image'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'Image Alt Text'}\n        name={'altText'}\n        error={data['altText'] ? data['altText'].error : null}\n        value={data['altText'] ? data['altText'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n    </>\n  )\n}\n\nLargeImgModal.propTypes = {\n  data: PropTypes.object,\n  updateFormData: PropTypes.func\n}\n\nexport default LargeImgModal\n","import React, { Fragment, useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { PropTypes } from 'prop-types'\n\nimport FormEntry from '../modal/FormEntry'\nimport Button from '../modal/parts/Button'\n\nconst SubHeader = styled.p`\n  width: 100%;\n  text-align: center;\n`\nconst ButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\nconst Options = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  font-size: 13px;\n`\nconst Directions = styled.p`\n  width: 100%;\n  padding: 5px;\n  margin-bottom: 0;\n  font-weight: bold;\n`\nconst IdContainer = styled.div`\n  width: 165px;\n  margin: 10px;\n  h4 {\n    margin: 5px 0;\n  }\n`\nconst LinkingModal = props => {\n  const { updateFormData, data, selectedTemplates, updateTemplateData } = props\n  const [pTags, setPTags] = useState(data.groups ? Object.keys(data.groups[0]) : [0])\n  const [links, setLinks] = useState([0])\n\nuseEffect(() => {\n  let currentLinks = []\n  if (data.groups && data.groups.length > 1) {\n    data.groups.forEach((group, idx) => {\n      if (data.groups.indexOf(group) > 0) {\n        currentLinks.push(idx - 1)\n        setLinks(currentLinks)\n      }\n    })\n  }\n}, [data.groups])\n\n  const addRemovePTags = (addParagraph, idx) => {\n    let createdParagraphs = [...pTags]\n    if (addParagraph) {\n      createdParagraphs.push(createdParagraphs.length)\n    } else {\n      createdParagraphs.pop()\n      let incomingDataClone = { ...data }\n      if (incomingDataClone.groups) {\n        let remove = incomingDataClone.groups[0]\n        let paragraph = 'paragraph' + idx\n        delete remove[paragraph]\n        updateTemplateData(incomingDataClone)\n      }\n    }\n    setPTags(createdParagraphs)\n  }\n\n  const buildLinks = (addLink, idx) => {\n    let createdLinks = [...links]\n    if (addLink) {\n      createdLinks.push(createdLinks.length)\n    } else {\n      createdLinks.pop()\n      let incomingDataClone = { ...data }\n      if (incomingDataClone.groups) {\n        incomingDataClone.groups.splice(idx, 1)\n        updateTemplateData(incomingDataClone)\n      }\n    }\n    setLinks(createdLinks)\n  }\n\n  let groups = [\n    { label: 'Id of template you wish the link to', name: 'link', type: 'input' },\n    { label: 'Link Aria Label', name: 'ariaLabel', type: 'input' },\n    { label: 'Anchor Link Title', name: 'anchorTitle', type: 'input' }\n  ]\n\n  const createLinks = idx => {\n    return (\n      <Fragment key={idx}>\n        <SubHeader>Link {idx + 1}</SubHeader>\n        {groups.map(link => {\n          let valueExists = data.groups && data.groups[idx + 1] && data.groups[idx + 1][link.name]\n          return (\n            <Fragment key={link.name + idx}>\n              <FormEntry\n                type={link.name}\n                label={link.label}\n                name={link.name}\n                group={idx + 2}\n                error={valueExists ? data.groups[idx + 1][link.name].error : null}\n                value={valueExists ? data.groups[idx + 1][link.name].value : ''}\n                updateFormData={updateFormData}\n                required\n              />\n            </Fragment>\n          )\n        })}\n        {links.length > 1 && <Button handleClick={() => buildLinks(false, (idx + 1))} buttonText={'Remove'} />}\n      </Fragment>\n    )\n  }\n  return (\n    <>\n      <FormEntry\n        type={'checkbox'}\n        label={'gray background'}\n        name={'backgroundDark'}\n        error={null}\n        updateFormData={updateFormData}\n        value={data['backgroundDark'] ? data['backgroundDark'].value : false}\n      />\n      <FormEntry\n        type={'checkbox'}\n        label={'Additional Padding Top & Bottom'}\n        name={'addPadding'}\n        error={null}\n        updateFormData={updateFormData}\n        value={data['addPadding'] ? data['addPadding'].value : false}\n      />\n      <FormEntry\n        type={'input'}\n        label={'Image'}\n        name={'image'}\n        error={data['image'] ? data['image'].error : null}\n        value={data['image'] ? data['image'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'Image Alt Text'}\n        name={'altText'}\n        error={data['altText'] ? data['altText'].error : null}\n        value={data['altText'] ? data['altText'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'Title'}\n        name={'title'}\n        error={data['title'] ? data['title'].error : null}\n        updateFormData={updateFormData}\n        value={data['title'] ? data['title'].value : ''}\n        required\n      />\n      {pTags.map((paragraph, idx) => {\n        let valueExists = data.groups && data.groups[0] && data.groups[0]['paragraph' + idx]\n        return (\n          <Fragment key={idx}>\n            <FormEntry\n              textArea\n              type={'text'}\n              label={'Paragraph ' + (idx + 1)}\n              name={'paragraph' + idx}\n              group={1}\n              error={valueExists ? data.groups[0]['paragraph' + idx].error : null}\n              value={valueExists ? data.groups[0]['paragraph' + idx].value : ''}\n              updateFormData={updateFormData}\n              required\n            />\n            {pTags.length > 1 && <Button handleClick={() => addRemovePTags(false, idx)} buttonText={'Remove'} />}\n          </Fragment>\n        )\n      })}\n      <ButtonContainer>\n        <Button handleClick={() => addRemovePTags(true)} buttonText={'Add Paragraph'} />\n      </ButtonContainer>\n      {/* MORE LINKS CAN BE ADDED */}\n      <Options>\n        <Directions>\n          Copy and paste the id of the template you want to link to. The number at the end represents the order of the\n          templates (first to last)\n        </Directions>\n        {selectedTemplates.map((template, idx) => {\n          let id = template.id + '-' + (idx + 1)\n          return (\n            <IdContainer key={idx}>\n              <h4>{template.tempName}</h4>\n              <p>{'ID: #' + id}</p>\n            </IdContainer>\n          )\n        })}\n      </Options>\n      {links.map((link, idx) => createLinks(idx))}\n      {links.length < 6 && <ButtonContainer>\n        <Button handleClick={() => buildLinks(true)} buttonText={'Add Link'} />\n      </ButtonContainer>}\n    </>\n  )\n}\n\nLinkingModal.propTypes = {\n  data: PropTypes.object,\n  updateFormData: PropTypes.func,\n  selectedTemplates: PropTypes.array\n}\n\nexport default LinkingModal\n","import React, { useState, Fragment } from 'react'\nimport styled from 'styled-components'\nimport { PropTypes } from 'prop-types'\nimport FormEntry from '../modal/FormEntry'\nimport Button from '../modal/parts/Button'\n\nconst ButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\nconst OneImageTextModal = props => {\n  const { updateFormData, data, updateTemplateData } = props\n  const [pTags, setPTags] = useState(data.groups || [0])\n\n  const addRemovePTags = (addParagraph, idx) => {\n    let createdParagraphs = [...pTags]\n    if (addParagraph) {\n      createdParagraphs.push(createdParagraphs.length)\n    } else {\n      createdParagraphs.splice(idx, 1)\n      let incomingDataClone = {...data}\n      if (incomingDataClone.groups) {\n        incomingDataClone.groups.splice(idx, 1)\n        updateTemplateData(incomingDataClone)\n      } \n    }\n    setPTags(createdParagraphs)\n  }\n\n  return (\n    <>\n      <FormEntry\n        type={'checkbox'}\n        label={'gray background'}\n        name={'backgroundDark'}\n        error={null}\n        updateFormData={updateFormData}\n        value={data['backgroundDark'] ? data['backgroundDark'].value : false}\n      />\n      <FormEntry\n        type={'checkbox'}\n        label={'Additional Padding Top & Bottom'}\n        name={'addPadding'}\n        error={null}\n        updateFormData={updateFormData}\n        value={data['addPadding'] ? data['addPadding'].value : false}\n      />\n      <FormEntry\n        type={'input'}\n        label={'Image'}\n        name={'image'}\n        error={data['image'] ? data['image'].error : null}\n        value={data['image'] ? data['image'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'Image Alt Text'}\n        name={'altText'}\n        error={data['altText'] ? data['altText'].error : null}\n        value={data['altText'] ? data['altText'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'Title'}\n        name={'title'}\n        error={data['title'] ? data['title'].error : null}\n        value={data['title'] ? data['title'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      {/* MORE PARAGRAPHS TO BE ADDED */}\n      {pTags.map((paragraph, idx) => {\n        let valueExists = data.groups && data.groups[idx] && data.groups[idx]['paragraph']\n        return (\n          <Fragment key={idx}>\n            <FormEntry\n              textArea\n              type={'text'}\n              label={'Paragraph ' + (idx + 1)}\n              name={'paragraph'}\n              group={idx + 1}\n              error={valueExists ? data.groups[idx]['paragraph'].error : null}\n              value={valueExists ? data.groups[idx]['paragraph'].value : ''}\n              updateFormData={updateFormData}\n              required\n            />\n            {pTags.length > 1 && <Button handleClick={() => addRemovePTags(false, idx)} buttonText={'Remove'} />}\n          </Fragment>\n        )\n      })}\n      <ButtonContainer>\n        <Button handleClick={() => addRemovePTags(true)} buttonText={'Add Paragraph'} />\n      </ButtonContainer>\n    </>\n  )\n}\n\nOneImageTextModal.propTypes = {\n  data: PropTypes.object,\n  updateFormData: PropTypes.func\n}\n\nexport default OneImageTextModal\n","import React, { Fragment, useState } from 'react'\nimport styled from 'styled-components'\nimport { PropTypes } from 'prop-types'\nimport FormEntry from '../modal/FormEntry'\nimport Button from '../modal/parts/Button'\n\nconst SubHeader = styled.p`\n  width: 100%;\n  text-align: center;\n`\nconst ButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n\nconst ProductListModal = props => {\n  const { updateFormData, data, updateTemplateData } = props\n  const [productsRender, setProductsRender] = useState(data.groups || [0])\n\n  //function adds and removes items from array (length represents how many inputs/products there are) and updates state based on if addProduct is true or false (Add/Remove buttons trigger this)\n  const buildAllProductFields = (addProduct, idx) => {\n    let createdProducts = [...productsRender]\n    if (addProduct) {\n      createdProducts.push(createdProducts.length)\n    } else {\n      createdProducts.pop()\n      let incomingDataClone = { ...data }\n      if (incomingDataClone.groups) {\n        incomingDataClone.groups.splice(idx, 1)\n        updateTemplateData(incomingDataClone)\n      }\n    }\n    setProductsRender(createdProducts)\n  }\n\n  let groups = [\n    { label: 'Image', name: 'image', type: 'input' },\n    { label: 'Image Alt Text', name: 'altText', type: 'input' },\n    { label: 'Product Name', name: 'productName', type: 'input' },\n    { label: 'Product Page URL', name: 'productPage', type: 'input' },\n    { label: 'Price', name: 'price', type: 'input' }\n  ]\n\n  const createProducts = idx => {\n    return (\n      <Fragment key={idx}>\n        <SubHeader>Product {idx + 1}</SubHeader>\n        {groups.map(product => {\n          let valueExists = data.groups && data.groups[idx] && data.groups[idx][product.name]\n          return (\n            <Fragment key={product.name + idx}>\n              <FormEntry\n                type={product.type}\n                label={product.label}\n                name={product.name}\n                group={idx + 1}\n                error={valueExists ? data.groups[idx][product.name].error : null}\n                value={valueExists ? data.groups[idx][product.name].value : ''}\n                updateFormData={updateFormData}\n                required\n              />\n            </Fragment>\n          )\n        })}\n        {productsRender.length > 1 && (\n          <Button handleClick={() => buildAllProductFields(false, idx)} buttonText={'Remove'} />\n        )}\n      </Fragment>\n    )\n  }\n\n  return (\n    <>\n      <FormEntry\n        type={'checkbox'}\n        label={'gray background'}\n        name={'backgroundDark'}\n        error={null}\n        updateFormData={updateFormData}\n        value={data['backgroundDark'] ? data['backgroundDark'].value : false}\n      />\n      <FormEntry\n        type={'checkbox'}\n        label={'Additional Padding Top & Bottom'}\n        name={'addPadding'}\n        error={null}\n        updateFormData={updateFormData}\n        value={data['addPadding'] ? data['addPadding'].value : false}\n      />\n      {productsRender.map((product, idx) => createProducts(idx))}\n      <ButtonContainer>\n        <Button handleClick={() => buildAllProductFields(true)} buttonText={'Add Product'} />\n      </ButtonContainer>\n    </>\n  )\n}\n\nProductListModal.propTypes = {\n  data: PropTypes.object,\n  updateFormData: PropTypes.func\n}\n\nexport default ProductListModal\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { PropTypes } from 'prop-types'\nimport FormEntry from '../modal/FormEntry'\n\nconst OptionTitle = styled.div`\n  width: 100%;\n`\nconst ImageOption = styled.div`\n  width: 100%;\n  display: flex;\n  height: 32px;\n  align-items: center;\n  padding: 5px 0;\n`\nconst QuotesModal = props => {\n  const { updateFormData, data } = props\n  return (\n    <>\n      <FormEntry\n        type={'checkbox'}\n        label={'gray background'}\n        name={'backgroundDark'}\n        error={null}\n        updateFormData={updateFormData}\n        value={data['backgroundDark'] ? data['backgroundDark'].value : false}\n      />\n      <FormEntry\n        type={'checkbox'}\n        label={'Additional Padding Top & Bottom'}\n        name={'addPadding'}\n        error={null}\n        updateFormData={updateFormData}\n        value={data['addPadding'] ? data['addPadding'].value : false}\n      />\n      <OptionTitle>Pick Image </OptionTitle>\n      <ImageOption>\n        <img src='https://dev.woodlanddirect.com/learningcenter/pagebuilder+/svgs/pro-tip-icon.svg' alt='' />\n        <FormEntry\n          type={'radio'}\n          label={'Wrench Icon'}\n          name={'icon'}\n          error={null}\n          updateFormData={updateFormData}\n          value={'https://dev.woodlanddirect.com/learningcenter/pagebuilder+/svgs/pro-tip-icon.svg'}\n          checked={data.icon ? data.icon.value === 'https://dev.woodlanddirect.com/learningcenter/pagebuilder+/svgs/pro-tip-icon.svg': false}\n        />\n      </ImageOption>\n      <ImageOption>\n        <img src='https://dev.woodlanddirect.com/learningcenter/pagebuilder+/svgs/question-icon.svg' alt='' />\n        <FormEntry\n          type={'radio'}\n          label={'Question Mark Icon'}\n          name={'icon'}\n          error={null}\n          updateFormData={updateFormData}\n          value={'https://dev.woodlanddirect.com/learningcenter/pagebuilder+/svgs/question-icon.svg'}\n          checked={data.icon ? data.icon.value === 'https://dev.woodlanddirect.com/learningcenter/pagebuilder+/svgs/question-icon.svg' : false}\n        />\n      </ImageOption>\n      <ImageOption>\n        <img src='https://dev.woodlanddirect.com/learningcenter/pagebuilder+/svgs/feedback-icon.svg' alt='' />\n        <FormEntry\n          type={'radio'}\n          label={'Star Icon'}\n          name={'icon'}\n          error={null}\n          updateFormData={updateFormData}\n          value={'https://dev.woodlanddirect.com/learningcenter/pagebuilder+/svgs/feedback-icon.svg'}\n          checked={data.icon ? data.icon.value === 'https://dev.woodlanddirect.com/learningcenter/pagebuilder+/svgs/feedback-icon.svg' : false}\n        />\n      </ImageOption>\n      <FormEntry\n        type={'input'}\n        label={'Header'}\n        name={'header'}\n        error={data['header'] ? data['header'].value : null}\n        updateFormData={updateFormData}\n        value={data['header'] ? data['header'].value : ''}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'Body Text'}\n        name={'bodyText'}\n        error={data['bodyText'] ? data['bodyText'].value : null}\n        updateFormData={updateFormData}\n        value={data['bodyText'] ? data['bodyText'].value : ''}\n        required\n      />\n    </>\n  )\n}\n\nQuotesModal.propTypes = {\n  data: PropTypes.object,\n  updateFormData: PropTypes.func\n}\n\nexport default QuotesModal\n","import React from 'react'\nimport { PropTypes } from 'prop-types'\nimport FormEntry from '../modal/FormEntry'\nconst SingleButtonModal = props => {\n  const { updateFormData, data } = props\n  return (\n    <>\n      <FormEntry\n        type={'checkbox'}\n        label={'gray background'}\n        name={'backgroundDark'}\n        error={null}\n        updateFormData={updateFormData}\n        value={data['backgroundDark'] ? data['backgroundDark'].value : false}\n      />\n      <FormEntry\n        type={'checkbox'}\n        label={'Additional Padding Top & Bottom'}\n        name={'addPadding'}\n        error={null}\n        updateFormData={updateFormData}\n        value={data['addPadding'] ? data['addPadding'].value : false}\n      />\n      <FormEntry\n        type={'input'}\n        label={'Button Text'}\n        name={'buttonText'}\n        error={data['buttonText'] ? data['buttonText'].error : null}\n        value={data['buttonText'] ? data['buttonText'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'Button Link URL'}\n        name={'href'}\n        error={data['href'] ? data['href'].error : null}\n        value={data['href'] ? data['href'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'Button Aria Label'}\n        name={'ariaLabel'}\n        value={data['ariaLabel'] ? data['ariaLabel'].value : ''}\n        error={data['ariaLabel'] ? data['ariaLabel'].error : null}\n        updateFormData={updateFormData}\n        required\n      />\n    </>\n  )\n}\n\nSingleButtonModal.propTypes = {\n  data: PropTypes.object,\n  updateFormData: PropTypes.func\n}\n\nexport default SingleButtonModal\n","import React, { Fragment, useState } from 'react'\nimport styled from 'styled-components'\nimport { PropTypes } from 'prop-types'\nimport FormEntry from '../modal/FormEntry'\nimport Button from '../modal/parts/Button'\n\nconst ButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\nconst TextOnlyModal = props => {\n  const { updateFormData, data, updateTemplateData } = props\n  const [pTags, setPTags] = useState([0])\n\n  const addRemovePTags = (addParagraph, idx) => {\n    let createdParagraphs = [...pTags]\n    if (addParagraph) {\n      createdParagraphs.push(createdParagraphs.length)\n    } else {\n      createdParagraphs.splice(idx, 1)\n      let incomingDataClone = {...data}\n      if (incomingDataClone.groups) {\n        incomingDataClone.groups.splice(idx, 1)\n        updateTemplateData(incomingDataClone)\n      } \n    }\n    setPTags(createdParagraphs)\n  }\n\n  return (\n    <>\n      <FormEntry\n        type={'checkbox'}\n        label={'gray background'}\n        name={'backgroundDark'}\n        error={null}\n        updateFormData={updateFormData}\n        value={data['backgroundDark'] ? data['backgroundDark'].value : false}\n      />\n      <FormEntry\n        type={'checkbox'}\n        label={'Additional Padding Top & Bottom'}\n        name={'addPadding'}\n        error={null}\n        updateFormData={updateFormData}\n        value={data['addPadding'] ? data['addPadding'].value : false}\n      />\n      <FormEntry\n        type={'input'}\n        label={'Title'}\n        name={'title'}\n        error={data['title'] ? data['title'].error : null}\n        value={data['title'] ? data['title'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      {pTags.map((paragraph, idx) => {\n        let valueExists = data.groups && data.groups[idx] && data.groups[idx]['paragraph']\n        return (\n          <Fragment key={idx}>\n            <FormEntry\n              textArea\n              type={'text'}\n              label={'Paragraph ' + (idx + 1)}\n              name={'paragraph'}\n              group={idx + 1}\n              error={valueExists ? data.groups[idx]['paragraph'].error : null}\n              value={valueExists ? data.groups[idx]['paragraph'].value : ''}\n              updateFormData={updateFormData}\n              required\n            />\n            {pTags.length > 1 && <Button handleClick={() => addRemovePTags(false, idx)} buttonText={'Remove'} />}\n          </Fragment>\n        )\n      })}\n      <ButtonContainer>\n        <Button handleClick={() => addRemovePTags(true)} buttonText={'Add Paragraph'} />\n      </ButtonContainer>\n    </>\n  )\n}\n\nTextOnlyModal.propTypes = {\n  data: PropTypes.object,\n  updateFormData: PropTypes.func\n}\n\nexport default TextOnlyModal\n","import React, { useState, Fragment, useEffect } from 'react'\nimport { PropTypes } from 'prop-types'\nimport styled from 'styled-components'\n\nimport FormEntry from '../modal/FormEntry'\nimport Button from '../modal/parts/Button'\n\nconst ButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\nconst Section = styled.div`\n  width: 100%;\n  padding: 10px;\n  text-align: center;\n`\nconst ThreeImageModal = props => {\n  const { updateFormData, data, updateTemplateData } = props\n  const [pTags, setPTags] = useState([[0], [0], [0]])\n\n  useEffect(\n    () => {\n      let clonedPtags = [...pTags]\n      if (data.groups && data.groups.length > 0) {\n        data.groups.forEach((group, idx) => {\n          let groupPosition = idx\n          let groupsArray = Object.keys(group)\n          if (Object.keys(group).length > 0) {\n            groupsArray.forEach((input, idx) => {\n              let groupArray = clonedPtags[groupPosition]\n              groupArray[idx] = idx\n            })\n          }\n        })\n        setPTags(clonedPtags)\n      }\n    },\n    [data.groups, pTags]\n  )\n\n  const addRemovePTags = (addParagraph, index, idx) => {\n    let createdParagraphs = [...pTags]\n    if (addParagraph) {\n      createdParagraphs[index].push(createdParagraphs[index].length)\n    } else {\n      createdParagraphs[index].splice(idx, 1)\n      let incomingDataClone = { ...data }\n      if (incomingDataClone.groups) {\n        let remove = incomingDataClone.groups[index]\n        let paragraph = 'paragraph' + idx\n        delete remove[paragraph]\n        updateTemplateData(incomingDataClone)\n      }\n    }\n    setPTags(createdParagraphs)\n  }\n\n  return (\n    <>\n      <FormEntry\n        type={'checkbox'}\n        label={'gray background'}\n        name={'backgroundDark'}\n        error={null}\n        updateFormData={updateFormData}\n        value={data['backgroundDark'] ? data['backgroundDark'].value : false}\n      />\n      <FormEntry\n        type={'checkbox'}\n        label={'Additional Padding Top & Bottom'}\n        name={'addPadding'}\n        error={null}\n        updateFormData={updateFormData}\n        value={data['addPadding'] ? data['addPadding'].value : false}\n      />\n      <FormEntry\n        type={'input'}\n        label={'Section Title'}\n        name={'title'}\n        error={data['title'] ? data['title'].error : null}\n        value={data['title'] ? data['title'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      <Section>First Image Form</Section>\n      {/* First Img Temp */}\n      <FormEntry\n        type={'input'}\n        label={'Image 1'}\n        name={'image1'}\n        error={data['image1'] ? data['image1'].error : null}\n        value={data['image1'] ? data['image1'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'Image Alt Text'}\n        name={'altText1'}\n        error={data['altText1'] ? data['altText1'].error : null}\n        value={data['altText1'] ? data['altText1'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'Sub Header'}\n        name={'subheader1'}\n        error={data['subheader1'] ? data['subheader1'].error : null}\n        value={data['subheader1'] ? data['subheader1'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      {pTags[0].map((idx) => {\n        let valueExists = data.groups && data.groups[0] && data.groups[0]['paragraph' + idx]\n        return (\n          <Fragment key={idx}>\n            <FormEntry\n              textArea\n              type={'text'}\n              label={'Paragraph ' + (idx + 1)}\n              name={'paragraph' + idx}\n              group={1}\n              error={valueExists ? data.groups[0]['paragraph' + idx].error : null}\n              value={valueExists ? data.groups[0]['paragraph' + idx].value : ''}\n              updateFormData={updateFormData}\n              required\n            />\n            {pTags[0].length > 1 && <Button handleClick={() => addRemovePTags(false, 0, idx)} buttonText={'Remove'} />}\n          </Fragment>\n        )\n      })}\n      <ButtonContainer>\n        <Button handleClick={() => addRemovePTags(true, 0)} buttonText={'Add Paragraph'} />\n      </ButtonContainer>\n      <Section>Second Image Form</Section>\n      {/* Second Img Temp */}\n      <FormEntry\n        type={'input'}\n        label={'Image 2'}\n        name={'image2'}\n        error={data['image2'] ? data['image2'].error : null}\n        value={data['image2'] ? data['image2'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'Image Alt Text'}\n        name={'altText2'}\n        error={data['altText2'] ? data['altText2'].error : null}\n        value={data['altText2'] ? data['altText2'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'Sub Header'}\n        name={'subheader2'}\n        error={data['subheader2'] ? data['subheader2'].error : null}\n        value={data['subheader2'] ? data['subheader2'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      {pTags[1].map((idx) => {\n        let valueExists = data.groups && data.groups[1] && data.groups[1]['paragraph' + idx]\n        return (\n          <Fragment key={idx}>\n            <FormEntry\n              textArea\n              type={'text'}\n              label={'Paragraph ' + (idx + 1)}\n              name={'paragraph' + idx}\n              group={2}\n              error={valueExists ? data.groups[1]['paragraph' + idx].error : null}\n              value={valueExists ? data.groups[1]['paragraph' + idx].value : ''}\n              updateFormData={updateFormData}\n              required\n            />\n            {pTags[1].length > 1 && <Button handleClick={() => addRemovePTags(false, 1, idx)} buttonText={'Remove'} />}\n          </Fragment>\n        )\n      })}\n      <ButtonContainer>\n      <Button handleClick={() => addRemovePTags(true, 1)} buttonText={'Add Paragraph'} />\n      </ButtonContainer>\n      {/* Third Img Temp */}\n      <Section>Third Image Form</Section>\n      <FormEntry\n        type={'input'}\n        label={'Image 3'}\n        name={'image3'}\n        error={data['image3'] ? data['image3'].error : null}\n        value={data['image3'] ? data['image3'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'Image Alt Text'}\n        name={'altText3'}\n        error={data['altText3'] ? data['altText3'].error : null}\n        value={data['altText3'] ? data['altText3'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'Sub Header'}\n        name={'subheader3'}\n        error={data['subheader3'] ? data['subheader3'].error : null}\n        value={data['subheader3'] ? data['subheader3'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      {pTags[2].map((idx) => {\n        let valueExists = data.groups && data.groups[2] && data.groups[2]['paragraph' + idx]\n        return (\n          <Fragment key={idx}>\n            <FormEntry\n              textArea\n              type={'text'}\n              label={'Paragraph ' + (idx + 1)}\n              name={'paragraph' + idx}\n              group={3}\n              error={valueExists ? data.groups[2]['paragraph' + idx].error : null}\n              value={valueExists ? data.groups[2]['paragraph' + idx].value : ''}\n              updateFormData={updateFormData}\n              required\n            />\n            {pTags[2].length > 1 && <Button handleClick={() => addRemovePTags(false, 2, idx)} buttonText={'Remove'} />}\n          </Fragment>\n        )\n      })}\n      <ButtonContainer>\n      <Button handleClick={() => addRemovePTags(true, 2)} buttonText={'Add Paragraph'} />\n      </ButtonContainer>\n    </>\n  )\n}\n\nThreeImageModal.propTypes = {\n  data: PropTypes.object,\n  updateFormData: PropTypes.func\n}\n\nexport default ThreeImageModal\n","import React, { useState, Fragment, useEffect } from 'react'\nimport { PropTypes } from 'prop-types'\nimport styled from 'styled-components'\n\nimport FormEntry from '../modal/FormEntry'\nimport Button from '../modal/parts/Button'\n\nconst ButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\nconst Section = styled.div`\n  width: 100%;\n  padding: 10px;\n  text-align: center;\n`\nconst TwoLargeImgModal = props => {\n  const { updateFormData, data, updateTemplateData } = props\n  const [pTags, setPTags] = useState([[0], [0]])\n\n  useEffect(\n    () => {\n      let clonedPtags = [...pTags]\n      if (data.groups && data.groups.length > 0) {\n        data.groups.forEach((group, idx) => {\n          let groupPosition = idx\n          let groupsArray = Object.keys(group)\n          if (Object.keys(group).length > 0) {\n            groupsArray.forEach((input, idx) => {\n              let groupArray = clonedPtags[groupPosition]\n              groupArray[idx] = idx\n            })\n          }\n        })\n        setPTags(clonedPtags)\n      }\n    },\n    [data.groups, pTags]\n  )\n\n  const addRemovePTags = (addParagraph, index, idx) => {\n    let createdParagraphs = [...pTags]\n    if (addParagraph) {\n      createdParagraphs[index].push(createdParagraphs[index].length)\n    } else {\n      createdParagraphs[index].splice(idx, 1)\n      let incomingDataClone = { ...data }\n      if (incomingDataClone.groups) {\n        let remove = incomingDataClone.groups[index]\n        let paragraph = 'paragraph' + idx\n        delete remove[paragraph]\n        updateTemplateData(incomingDataClone)\n      }\n    }\n    setPTags(createdParagraphs)\n  }\n\n  return (\n    <>\n      <FormEntry\n        type={'checkbox'}\n        label={'gray background'}\n        name={'backgroundDark'}\n        error={null}\n        updateFormData={updateFormData}\n        value={data['backgroundDark'] ? data['backgroundDark'].value : false}\n      />\n      <FormEntry\n        type={'checkbox'}\n        label={'Additional Padding Top & Bottom'}\n        name={'addPadding'}\n        error={null}\n        updateFormData={updateFormData}\n        value={data['addPadding'] ? data['addPadding'].value : false}\n      />\n      <FormEntry\n        type={'input'}\n        label={'Title'}\n        name={'title'}\n        error={data['title'] ? data['title'].error : null}\n        value={data['title'] ? data['title'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      <Section>First Image Form</Section>\n      {/* First Img Temp */}\n      <FormEntry\n        type={'input'}\n        label={'Image 1'}\n        name={'image1'}\n        error={data['image1'] ? data['image1'].error : null}\n        value={data['image1'] ? data['image1'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'Image Alt Text'}\n        name={'altText1'}\n        error={data['altText1'] ? data['altText1'].error : null}\n        value={data['altText1'] ? data['altText1'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'Sub Header'}\n        name={'subheader1'}\n        error={data['subheader1'] ? data['subheader1'].error : null}\n        value={data['subheader1'] ? data['subheader1'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      {pTags[0].map(idx => {\n        let valueExists = data.groups && data.groups[0] && data.groups[0]['paragraph' + idx]\n        return (\n          <Fragment key={idx}>\n            <FormEntry\n              textArea\n              type={'text'}\n              label={'Paragraph ' + (idx + 1)}\n              name={'paragraph' + idx}\n              group={1}\n              error={valueExists ? data.groups[0]['paragraph' + idx].error : null}\n              value={valueExists ? data.groups[0]['paragraph' + idx].value : ''}\n              updateFormData={updateFormData}\n              required\n            />\n            {pTags[0].length > 1 && <Button handleClick={() => addRemovePTags(false, 0, idx)} buttonText={'Remove'} />}\n          </Fragment>\n        )\n      })}\n      <ButtonContainer>\n        <Button handleClick={() => addRemovePTags(true, 0)} buttonText={'Add Paragraph'} />\n      </ButtonContainer>\n      <Section>Second Image Form</Section>\n      {/* Second Img Temp */}\n      <FormEntry\n        type={'input'}\n        label={'Image 2'}\n        name={'image2'}\n        error={data['image2'] ? data['image2'].error : null}\n        value={data['image2'] ? data['image2'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'Image Alt Text'}\n        name={'altText2'}\n        error={data['altText2'] ? data['altText2'].error : null}\n        value={data['altText2'] ? data['altText2'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'Sub Header'}\n        name={'subheader2'}\n        error={data['subheader2'] ? data['subheader2'].error : null}\n        value={data['subheader2'] ? data['subheader2'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      {pTags[1].map(idx => {\n        let valueExists = data.groups && data.groups[1] && data.groups[1]['paragraph' + idx]\n        return (\n          <Fragment key={idx}>\n            <FormEntry\n              textArea\n              type={'text'}\n              label={'Paragraph ' + (idx + 1)}\n              name={'paragraph' + idx}\n              group={2}\n              error={valueExists ? data.groups[1]['paragraph' + idx].error : null}\n              value={valueExists ? data.groups[1]['paragraph' + idx].value : ''}\n              updateFormData={updateFormData}\n              required\n            />\n            {pTags[1].length > 1 && <Button handleClick={() => addRemovePTags(false, 1, idx)} buttonText={'Remove'} />}\n          </Fragment>\n        )\n      })}\n      <ButtonContainer>\n        <Button handleClick={() => addRemovePTags(true, 1)} buttonText={'Add Paragraph'} />\n      </ButtonContainer>\n    </>\n  )\n}\n\nTwoLargeImgModal.propTypes = {\n  data: PropTypes.object,\n  updateFormData: PropTypes.func\n}\n\nexport default TwoLargeImgModal\n","import React, { useState, Fragment, useEffect } from 'react'\nimport { PropTypes } from 'prop-types'\nimport styled from 'styled-components'\n\nimport FormEntry from '../modal/FormEntry'\nimport Button from '../modal/parts/Button'\n\nconst ButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\nconst Section = styled.div`\n  width: 100%;\n  padding: 10px;\n  text-align: center;\n`\nconst TwoSmallImgModal = props => {\n  const { updateFormData, data, updateTemplateData } = props\n  const [pTags, setPTags] = useState([[0], [0]])\n\n  useEffect(\n    () => {\n      let clonedPtags = [...pTags]\n      if (data.groups && data.groups.length > 0) {\n        data.groups.forEach((group, idx) => {\n          let groupPosition = idx\n          let groupsArray = Object.keys(group)\n          if (Object.keys(group).length > 0) {\n            groupsArray.forEach((input, idx) => {\n              let groupArray = clonedPtags[groupPosition]\n              groupArray[idx] = idx\n            })\n          }\n        })\n        setPTags(clonedPtags)\n      }\n    },\n    [data.groups, pTags]\n  )\n\n  const addRemovePTags = (addParagraph, index, idx) => {\n    let createdParagraphs = [...pTags]\n    if (addParagraph) {\n      createdParagraphs[index].push(createdParagraphs[index].length)\n    } else {\n      createdParagraphs[index].splice(idx, 1)\n      let incomingDataClone = { ...data }\n      if (incomingDataClone.groups) {\n        let remove = incomingDataClone.groups[index]\n        let paragraph = 'paragraph' + idx\n        delete remove[paragraph]\n        updateTemplateData(incomingDataClone)\n      }\n    }\n    setPTags(createdParagraphs)\n  }\n\n  return (\n    <>\n      <FormEntry\n        type={'checkbox'}\n        label={'gray background'}\n        name={'backgroundDark'}\n        error={null}\n        updateFormData={updateFormData}\n        value={data['backgroundDark'] ? data['backgroundDark'].value : false}\n      />\n      <FormEntry\n        type={'checkbox'}\n        label={'Additional Padding Top & Bottom'}\n        name={'addPadding'}\n        error={null}\n        updateFormData={updateFormData}\n        value={data['addPadding'] ? data['addPadding'].value : false}\n      />\n      <FormEntry\n        type={'input'}\n        label={'Title'}\n        name={'title'}\n        error={data['title'] ? data['title'].error : null}\n        value={data['title'] ? data['title'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      <Section>First Image Form</Section>\n      {/* First Img Temp */}\n      <FormEntry\n        type={'input'}\n        label={'Image 1'}\n        name={'image1'}\n        error={data['image1'] ? data['image1'].error : null}\n        value={data['image1'] ? data['image1'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'Image Alt Text'}\n        name={'altText1'}\n        error={data['altText1'] ? data['altText1'].error : null}\n        value={data['altText1'] ? data['altText1'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'Sub Header'}\n        name={'subheader1'}\n        error={data['subheader1'] ? data['subheader1'].error : null}\n        value={data['subheader1'] ? data['subheader1'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      {pTags[0].map(idx => {\n        let valueExists = data.groups && data.groups[0] && data.groups[0]['paragraph' + idx]\n        return (\n          <Fragment key={idx}>\n            <FormEntry\n              textArea\n              type={'text'}\n              label={'Paragraph ' + (idx + 1)}\n              name={'paragraph' + idx}\n              group={1}\n              error={valueExists ? data.groups[0]['paragraph' + idx].error : null}\n              value={valueExists ? data.groups[0]['paragraph' + idx].value : ''}\n              updateFormData={updateFormData}\n              required\n            />\n            {pTags[0].length > 1 && <Button handleClick={() => addRemovePTags(false, 0, idx)} buttonText={'Remove'} />}\n          </Fragment>\n        )\n      })}\n      <ButtonContainer>\n        <Button handleClick={() => addRemovePTags(true, 0)} buttonText={'Add Paragraph'} />\n      </ButtonContainer>\n      <Section>Second Image Form</Section>\n      {/* Second Img Temp */}\n      <FormEntry\n        type={'input'}\n        label={'Image 2'}\n        name={'image2'}\n        error={data['image2'] ? data['image2'].error : null}\n        value={data['image2'] ? data['image2'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'Image Alt Text'}\n        name={'alt2'}\n        error={data['alt2'] ? data['alt2'].error : null}\n        value={data['alt2'] ? data['alt2'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      <FormEntry\n        type={'input'}\n        label={'Sub Header'}\n        name={'subheader2'}\n        error={data['subheader2'] ? data['subheader2'].error : null}\n        value={data['subheader2'] ? data['subheader2'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n      {pTags[1].map(idx => {\n        let valueExists = data.groups && data.groups[1] && data.groups[1]['paragraph' + idx]\n        return (\n          <Fragment key={idx}>\n            <FormEntry\n              textArea\n              type={'text'}\n              label={'Paragraph ' + (idx + 1)}\n              name={'paragraph' + idx}\n              group={2}\n              error={valueExists ? data.groups[1]['paragraph' + idx].error : null}\n              value={valueExists ? data.groups[1]['paragraph' + idx].value : ''}\n              updateFormData={updateFormData}\n              required\n            />\n            {pTags[1].length > 1 && <Button handleClick={() => addRemovePTags(false, 1, idx)} buttonText={'Remove'} />}\n          </Fragment>\n        )\n      })}\n      <ButtonContainer>\n        <Button handleClick={() => addRemovePTags(true, 1)} buttonText={'Add Paragraph'} />\n      </ButtonContainer>\n    </>\n  )\n}\n\nTwoSmallImgModal.propTypes = {\n  data: PropTypes.object,\n  updateFormData: PropTypes.func\n}\n\nexport default TwoSmallImgModal\n","import Banner from '../components/templates/Banner'\nimport ButtonText from '../components/templates/ButtonText'\nimport FourImage from '../components/templates/FourImage'\nimport Gallery from '../components/templates/Gallery'\nimport LargeImage from '../components/templates/LargeImage'\nimport Linking from '../components/templates/Linking'\nimport OneImageText from '../components/templates/OneImageText'\nimport Product from '../components/templates/Product'\nimport Quote from '../components/templates/Quote'\nimport SingleButton from '../components/templates/SingleButton'\nimport TextOnly from '../components/templates/TextOnly'\nimport ThreeImage from '../components/templates/ThreeImage'\nimport TwoLargeImage from '../components/templates/TwoLargeImage'\nimport TwoSmallImage from '../components/templates/TwoSmallImage'\nimport Video from '../components/templates/Video'\nimport BannerModal from '../components/modals/BannerModal'\nimport ButtonTextModal from '../components/modals/ButtonTextModal'\nimport FourImageModal from '../components/modals/FourImageModal'\nimport GalleryModal from '../components/modals/GalleryModal'\nimport LargeImgModal from '../components/modals/LargeImgModal'\nimport LinkingModal from '../components/modals/LinkingModal'\nimport OneImageTextModal from '../components/modals/OneImageTextModal'\nimport ProductListModal from '../components/modals/ProductListModal'\nimport QuotesModal from '../components/modals/QuotesModal'\nimport SingleButtonModal from '../components/modals/SingleButtonModal'\nimport TextOnlyModal from '../components/modals/TextOnlyModal'\nimport ThreeImageModal from '../components/modals/ThreeImageModal'\nimport TwoLargeImgModal from '../components/modals/TwoLargeImgModal'\nimport TwoSmallImgModal from '../components/modals/TwoSmallImgModal'\nimport VideoModal from '../components/modals/VideoModal'\n\nexport const templatesIdx = [\n  {\n    thumbnailImg: 'banner_temp.png',\n    tempName: 'Banner Template'\n  },\n  {\n    thumbnailImg: 'button_text_temp.png',\n    tempName: 'Button Text Template'\n  },\n  {\n    thumbnailImg: 'four_img_temp.png',\n    tempName: 'Four Image Template'\n  },\n  {\n    thumbnailImg: 'gallery_temp.png',\n    tempName: 'Gallery Template'\n  },\n  {\n    thumbnailImg: 'large_img_temp.png',\n    tempName: 'Large Image Template'\n  },\n  {\n    thumbnailImg: 'linking_temp.png',\n    tempName: 'Linking Template'\n  },\n  {\n    thumbnailImg: 'one_img_text_temp.png',\n    tempName: 'One Image Text Template'\n  },\n  {\n    thumbnailImg: 'product_temp.png',\n    tempName: 'Product Template'\n  },\n  {\n    thumbnailImg: 'quote_temp.png',\n    tempName: 'Quote Template'\n  },\n  {\n    thumbnailImg: 'single_button_temp.png',\n    tempName: 'Single Button Template'\n  },\n  {\n    thumbnailImg: 'text_only_temp.png',\n    tempName: 'Text Only Template'\n  },\n  {\n    thumbnailImg: 'three_img_temp.png',\n    tempName: 'Three Image Template'\n  },\n  {\n    thumbnailImg: 'two_large_img_temp.png',\n    tempName: 'Two Large Image Template'\n  },\n  {\n    thumbnailImg: 'two_small_img_temp.png',\n    tempName: 'Two Small Image Template'\n  },\n  {\n    thumbnailImg: 'video_temp.png',\n    tempName: 'Video Template'\n  }\n]\n\nexport const templatesData = {\n  'Banner Template': {\n    component: Banner,\n    modal: BannerModal,\n    id: 'banner-temp'\n  },\n  'Button Text Template': {\n    component: ButtonText,\n    modal: ButtonTextModal,\n    id: 'button-text-template'\n  },\n  'Four Image Template': {\n    component: FourImage,\n    modal: FourImageModal,\n    id: 'four-img-template'\n  },\n  'Gallery Template': {\n    component: Gallery,\n    modal: GalleryModal,\n    id: 'gallery-template'\n  },\n  'Large Image Template': {\n    component: LargeImage,\n    modal: LargeImgModal,\n    id: 'large-image-temp'\n  },\n  'Linking Template': {\n    component: Linking,\n    modal: LinkingModal,\n    id: 'linking-temp'\n  },\n  'One Image Text Template': {\n    component: OneImageText,\n    modal: OneImageTextModal,\n    id: 'one-image-text'\n  },\n  'Product Template': {\n    component: Product,\n    modal: ProductListModal,\n    id: 'product-list-temp'\n  },\n  'Quote Template': {\n    component: Quote,\n    modal: QuotesModal,\n    id: 'quotes-template'\n  },\n  'Single Button Template': {\n    component: SingleButton,\n    modal: SingleButtonModal,\n    id: 'button-text-template'\n  },\n  'Text Only Template': {\n    component: TextOnly,\n    modal: TextOnlyModal,\n    id: 'text-only-temp'\n  },\n  'Three Image Template': {\n    component: ThreeImage,\n    modal: ThreeImageModal,\n    id: 'three-img-temp'\n  },\n  'Two Large Image Template': {\n    component: TwoLargeImage,\n    modal: TwoLargeImgModal,\n    id: 'two-large-image-temp'\n  },\n  'Two Small Image Template': {\n    component: TwoSmallImage,\n    modal: TwoSmallImgModal,\n    id: 'two-small-image-temp'\n  },\n  'Video Template': {\n    component: Video,\n    modal: VideoModal,\n    id: 'video-template'\n  }\n}\n","import React from 'react'\nimport { PropTypes } from 'prop-types'\nimport FormEntry from '../modal/FormEntry'\nconst VideoModal = props => {\n  const { updateFormData, data } = props\n  return (\n    <>\n      <FormEntry\n        type={'checkbox'}\n        label={'gray background'}\n        name={'backgroundDark'}\n        error={null}\n        updateFormData={updateFormData}\n        value={data['backgroundDark'] ? data['backgroundDark'].value : false}\n      />\n      <FormEntry\n        type={'checkbox'}\n        label={'Additional Padding Top & Bottom'}\n        name={'addPadding'}\n        error={null}\n        updateFormData={updateFormData}\n        value={data['addPadding'] ? data['addPadding'].value : false}\n      />\n      <FormEntry\n        type={'input'}\n        label={'Video URL'}\n        name={'video'}\n        error={data['video'] ? data['video'].error : null}\n        value={data['video'] ? data['video'].value : ''}\n        updateFormData={updateFormData}\n        required\n      />\n    </>\n  )\n}\n\nVideoModal.propTypes = {\n  data: PropTypes.object,\n  updateFormData: PropTypes.func\n}\n\nexport default VideoModal\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport AddIcon from './AddIcon'\nimport { templatesIdx } from '../../../utils/templates'\n\nconst Template = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 20px;\n  &:last-child {\n    margin-bottom: 50px;\n  }\n  cursor: pointer;\n  svg {\n    transition: all 0.2s ease-out;\n    opacity: 0.9;\n  }\n  :hover svg {\n    opacity: 1;\n    transform: scale(1.05);\n    transition: all 0.2s ease-in;\n  }\n`\nconst ImgIcon = styled.div`\n  display: flex;\n  align-items: center;\n`\nconst TemplateImg = styled.img`\n  margin-bottom: 5px;\n`\nconst TemplateName = styled.div`\n  color: ${props => props.theme.fontOverlay};\n  text-transform: uppercase;\n  font-weight: bold;\n  font-size: 14px;\n  width: 275px;\n  align-self: flex-start;\n  text-align: center;\n  margin-left: 20px;\n`\nconst AddButton = styled.button`\n  outline: 0;\n  border: none;\n  background-color: unset;\n  width: 35px;\n  height: 35px;\n  cursor: pointer;\n  margin-left: 10px;\n  transform: scale(1);\n`\nconst TemplatesIndex = props => {\n  const { updateSelectedTemplates } = props\n  return (\n    <>\n      {templatesIdx.map((template, idx) => {\n        const newTemplate = template\n        const { tempName, thumbnailImg } = newTemplate\n        let imgUrl = 'https:///dev.woodlanddirect.com/learningcenter/pagebuilder+/templateimgs/' + thumbnailImg\n        return (\n          <Template\n            key={idx}\n            className={'idx-template-container'}\n            onClick={() => {\n              updateSelectedTemplates('add', template.tempName)\n            }}>\n            <ImgIcon className={'img-icon'}>\n              <TemplateImg src={imgUrl} className={'template-img'} />\n              <AddButton className={'add-button'}>\n                <AddIcon />\n              </AddButton>\n            </ImgIcon>\n            <TemplateName className={'template-icon'}>{tempName}</TemplateName>\n          </Template>\n        )\n      })}\n    </>\n  )\n}\nexport default TemplatesIndex\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nimport NavArrow from './parts/NavArrow'\nimport TemplatesIndex from './parts/TemplatesIndex'\n\nconst SideBarContainer = styled.div`\n  background-color: ${props => props.theme.fontMain + 'BF'};\n  position: fixed;\n  width: 60px;\n  transition: width 0.5s ease;\n  overflow: hidden;\n  height: 100%;\n  font-family: ${props => props.theme.fontBasic};\n  z-index: 1;\n  &.open {\n    width: 350px;\n  }\n  &.open .nav-arrow {\n    transform: rotate(180deg);\n    animation: fadeOutOpen 0.8s;\n    @keyframes fadeOutOpen {\n      0% {\n        opacity: 0;\n        transform: rotate(180deg);\n        padding-left: 20px;\n      }\n      100% {\n        opacity: 1;\n        padding-left: 10px;\n      }\n    }\n  }\n  &.open .nav-arrow:hover {\n    transform: rotate(0deg);\n    padding-right: 20px;\n    animation: fadeInOpen 0.8s;\n    @keyframes fadeInOpen {\n      0% {\n        opacity: 0;\n        padding-right: 10px;\n        transform: rotate(0deg);\n      }\n      100% {\n        opacity: 1;\n        padding-right: 20px;\n      }\n    }\n  }\n  &.close .nav-arrow {\n    transform: rotate(0deg);\n    animation: fadeOutClose 0.8s;\n    @keyframes fadeOutClose {\n      0% {\n        opacity: 0;\n        padding-left: 15px;\n      }\n      100% {\n        opacity: 1;\n        transform: rotate(0deg);\n      }\n    }\n  }\n  &.close .nav-arrow:hover {\n    transform: rotate(180deg);\n    padding-right: 15px;\n    animation: fadeInClose 0.8s;\n    @keyframes fadeInClose {\n      0% {\n        opacity: 0;\n        padding-right: 10px;\n        transform: rotate(180deg);\n      }\n      100% {\n        opacity: 1;\n        padding-right: 15px;\n      }\n    }\n  }\n  &.open .idx-container {\n    animation: navOpen 1.5s;\n    opacity: 1;\n    height: 100%;\n    @keyframes navOpen {\n      0% {\n        opacity: 0;\n      }\n      100% {\n        opacity: 1;\n      }\n    }\n  }\n`\nconst NavHeader = styled.div`\n  display: flex;\n  position: relative;\n  overflow: hidden;\n  justify-content: space-between;\n  align-items: center;\n`\nconst Title = styled.div`\n  color: ${props => props.theme.fontOverlay};\n  font-weight: bold;\n  text-transform: uppercase;\n  margin-left: 20px;\n  animation: navOpen 2s;\n  @keyframes navOpen {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n`\nconst IndexContainer = styled.div`\n  overflow: scroll;\n  height: 0px;\n  opacity: 0;\n  height: 100%;\n`\nconst SideBar = props => {\n  const { updateSelectedTemplates } = props\n  const [navOpen, setNavOpen] = useState(true)\n  const toggleNav = () => {\n    setNavOpen(!navOpen)\n  }\n  let navStatus = navOpen ? 'open' : 'close'\n  return (\n    <SideBarContainer className={navStatus} navOpen={navOpen}>\n      <NavHeader onClick={() => toggleNav()}>\n        {navOpen && <Title className={'sidebar-title'}>templates</Title>}\n        <NavArrow navOpen={navOpen} />\n      </NavHeader>\n      {navOpen && (\n        <IndexContainer className={'idx-container'}>\n          <TemplatesIndex updateSelectedTemplates={updateSelectedTemplates} />\n        </IndexContainer>\n      )}\n    </SideBarContainer>\n  )\n}\nexport default SideBar\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.section`\n  position: relative;\n`\nconst Export = styled.svg`\n  top: 0;\n  left: 0;\n  fill: ${props => props.theme.accentPrimary};\n`\n\nconst ExportText = styled.section`\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 53px;\n  height: 53px;\n  border-radius: 100%;\n  color: ${props => props.showCopy ? 'white' : 'transparent'};\n  background-color: ${props => props.showCopy ? props.theme.accentPrimary : 'transparent'};\n  font-family: ${props => props.theme.fontBody};\n  font-size: 10px;\n  font-weight: 700;\n  text-transform: uppercase;\n  transition: 0.3s ease-in-out;\n  :hover {\n    background-color: ${props => props.theme.accentPrimary};\n    color: white;\n  }\n`\nconst ExportIcon = props => {\n  const { showCopy } = props\n  let exportText = showCopy ? 'copied!' : 'Export'\n  return (\n    <Container className='export-container'>\n      <Export viewBox={'0 0 92.954 92.954'}>\n        <g transform='translate(-1809 -255)'>\n          <g transform='translate(1835 281)'>\n            <path\n              d='M0,2.155a2.155,2.155,0,0,1,4.309,0V29.577a2.155,2.155,0,1,1-4.309,0Z'\n              transform='translate(38.781) rotate(45)'\n            />\n            <path\n              d='M20.433,6.379H11.814a2.155,2.155,0,1,1,0-4.309H22.587a2.155,2.155,0,0,1,2.155,2.155V15a2.155,2.155,0,1,1-4.309,0Z'\n              transform='translate(16.194 -1.178)'\n            />\n            <path\n              d='M33.7,21.763a2.155,2.155,0,1,1,4.309,0V33.882a6.194,6.194,0,0,1-6.194,6.194H7.574A6.194,6.194,0,0,1,1.38,33.882V9.644A6.194,6.194,0,0,1,7.574,3.45H20.7a2.155,2.155,0,0,1,0,4.309H7.574A1.885,1.885,0,0,0,5.689,9.644V33.882a1.885,1.885,0,0,0,1.885,1.885H31.812A1.885,1.885,0,0,0,33.7,33.882Z'\n              transform='translate(-1.38 1.751)'\n            />\n          </g>\n          <circle\n            cx='46.477'\n            cy='46.477'\n            r='43.477'\n            fill='none'\n            stroke='#E66D1C'\n            strokeWidth='6'\n            transform='translate(1809 255)'\n          />\n        </g>\n      </Export>\n      <ExportText showCopy={showCopy} className={'export-text'}>{exportText}</ExportText>\n    </Container>\n  )\n}\n\nexport default ExportIcon\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.section`\n  position: relative;\n`\nconst Text = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 53px;\n  height: 53px;\n  border-radius: 100%;\n  color: ${props => (props.showCopy ? 'white' : 'transparent')};\n  background-color: ${props => (props.showCopy ? props.theme.accentPrimary : 'transparent')};\n  font-family: ${props => props.theme.fontBody};\n  font-size: 10px;\n  font-weight: 700;\n  text-transform: uppercase;\n  transition: 0.3s ease-in-out;\n  :hover {\n    background-color: ${props => props.theme.accentPrimary};\n    color: white;\n  }\n`\n\nconst ResponsiveIcon = props => {\n  const { showCopy } = props\n  return (\n    <Container className='display-container'>\n      <svg viewBox='0 0 92.954 92.954'>\n        <g transform='translate(-1660 -274)'>\n          <g transform='translate(1667.5 285.5)'>\n            <g transform='translate(15.5 15.5)'>\n              <g fill='#E66D1C' strokeLinecap='round'>\n                <path\n                  d='M 44.25099182128906 39.37131500244141 L 44.25097274780273 39.37131500244141 L 2.415531873703003 39.37131500244141 C 0.8968819379806519 39.37131500244141 -0.3414880335330963 38.13575744628906 -0.3449980616569519 36.61704635620117 L -0.3449980616569519 2.415526866912842 C -0.3433480560779572 0.8948469161987305 0.8948519825935364 -0.3433531224727631 2.415151834487915 -0.3450030982494354 L 44.25097274780273 -0.3450030982494354 C 45.77166366577148 -0.3433531224727631 47.00986099243164 0.8948469161987305 47.01150131225586 2.415156841278076 L 47.01150131225586 36.61612701416016 C 47.00807189941406 38.13561630249023 45.76971054077148 39.37123870849609 44.25099182128906 39.37131500244141 Z M 2.531041860580444 36.49527740478516 L 44.13550186157227 36.49527740478516 L 44.13546371459961 2.531026840209961 L 2.531022071838379 2.531036853790283 L 2.531041860580444 36.49527740478516 Z'\n                  stroke='none'\n                />\n                <path\n                  d='M 44.25097274780273 39.02631759643555 C 45.58292007446289 39.0262451171875 46.66349029541016 37.94806671142578 46.66650009155273 36.61612701416016 L 46.66650009155273 2.415526866912842 C 46.66506195068359 1.082066893577576 45.58443069458008 0.001446890877559781 44.25097274780273 -3.10913083012565e-06 L 2.415531873703003 -3.10913083012565e-06 C 1.082071900367737 0.001446890877559781 0.001451953081414104 1.082066893577576 1.95312509276846e-06 2.415526866912842 L 1.95312509276846e-06 36.61624526977539 C 0.003081953153014183 37.94818878173828 1.083701968193054 39.02631759643555 2.415531873703003 39.02631759643555 L 44.25097274780273 39.02631759643555 M 2.415531873703003 36.84027862548828 C 2.414668083190918 36.84028625488281 2.413822412490845 36.84029006958008 2.412960767745972 36.84029006958008 C 2.288897037506104 36.84029006958008 2.187581300735474 36.74049377441406 2.186042070388794 36.61612701416016 L 2.186042070388794 2.415526866912842 C 2.185391902923584 2.354466915130615 2.209362030029297 2.295717000961304 2.252542018890381 2.252536773681641 C 2.29515266418457 2.209926128387451 2.352909326553345 2.186023950576782 2.413111209869385 2.186023950576782 C 2.413915395736694 2.186023950576782 2.414726734161377 2.186028242111206 2.415531873703003 2.186036825180054 L 44.25097274780273 2.186036825180054 C 44.25178146362305 2.186028242111206 44.25258636474609 2.186023950576782 44.25339126586914 2.186023950576782 C 44.31357955932617 2.186023950576782 44.37135314941406 2.209928750991821 44.41397094726562 2.252536773681641 C 44.4571418762207 2.295717000961304 44.48112106323242 2.354466915130615 44.48046112060547 2.415526866912842 L 44.48047256469727 36.61612701416016 C 44.47892379760742 36.74049377441406 44.37762451171875 36.84029006958008 44.25355911254883 36.84029006958008 C 44.25270080566406 36.84029006958008 44.25183486938477 36.84028625488281 44.25097274780273 36.84027862548828 L 2.415531873703003 36.84027862548828 M 44.25101089477539 39.71631622314453 L 44.25097274780273 39.71631622314453 L 2.415531873703003 39.71631622314453 C 0.7070919275283813 39.71631622314453 -0.6860480308532715 38.32634735107422 -0.6899980306625366 36.61784744262695 L -0.6899980306625366 2.415526866912842 C -0.6881380677223206 0.7046568989753723 0.7046619653701782 -0.6881431341171265 2.414782047271729 -0.6900030970573425 L 44.25097274780273 -0.6900030970573425 C 45.96185302734375 -0.6881431341171265 47.35465240478516 0.7046568989753723 47.35650253295898 2.414776802062988 L 47.35650253295898 36.61612701416016 C 47.35264205932617 38.32618713378906 45.95952224731445 39.71622848510742 44.25101089477539 39.71631622314453 Z M 2.876041889190674 36.15027618408203 L 43.79047012329102 36.15027618408203 L 43.79046249389648 2.876036882400513 L 2.876041889190674 2.876036882400513 L 2.876041889190674 36.15027618408203 Z'\n                  stroke='none'\n                  fill='#E66D1C'\n                />\n              </g>\n              <g transform='translate(-1.551 -1.56)' fill='#E66D1C' strokeLinecap='round'>\n                <path\n                  d='M 9.989941596984863 17.49038124084473 L 9.644941329956055 17.49038124084473 L 7.458901405334473 17.49038124084473 L 7.113901138305664 17.49038124084473 L 7.113901138305664 17.14538192749023 L 7.113901138305664 7.501682281494141 L 7.113901138305664 7.156682014465332 L 7.458901405334473 7.156682014465332 L 17.10260200500488 7.156682014465332 L 17.44760131835938 7.156682014465332 L 17.44760131835938 7.501682281494141 L 17.44760131835938 9.687711715698242 L 17.44760131835938 10.03271198272705 L 17.10260200500488 10.03271198272705 L 9.989941596984863 10.03271198272705 L 9.989941596984863 17.14538192749023 L 9.989941596984863 17.49038124084473 Z'\n                  stroke='none'\n                />\n                <path\n                  d='M 7.458900451660156 7.501680374145508 L 7.458900451660156 17.14538192749023 L 9.644941329956055 17.14538192749023 L 9.644941329956055 9.687721252441406 L 17.10260009765625 9.687721252441406 L 17.10260009765625 7.501680374145508 L 7.458900451660156 7.501680374145508 M 6.768901824951172 6.811681747436523 L 7.458900451660156 6.811681747436523 L 17.10260009765625 6.811681747436523 L 17.79260063171387 6.811681747436523 L 17.79260063171387 7.501680374145508 L 17.79260063171387 9.687721252441406 L 17.79260063171387 10.37772083282471 L 17.10260009765625 10.37772083282471 L 10.33494091033936 10.37772083282471 L 10.33494091033936 17.14538192749023 L 10.33494091033936 17.83538055419922 L 9.644941329956055 17.83538055419922 L 7.458900451660156 17.83538055419922 L 6.768901824951172 17.83538055419922 L 6.768901824951172 17.14538192749023 L 6.768901824951172 7.501680374145508 L 6.768901824951172 6.811681747436523 Z'\n                  stroke='none'\n                />\n              </g>\n              <g transform='translate(-8.147 -6.173)' fill='#E66D1C' strokeLinecap='round'>\n                <path\n                  d='M 49.16552352905273 39.67042922973633 L 48.82052230834961 39.67042922973633 L 39.17681121826172 39.67042922973633 L 38.83181381225586 39.67042922973633 L 38.83181381225586 39.3254280090332 L 38.83181381225586 37.13939666748047 L 38.83181381225586 36.79439926147461 L 39.17681121826172 36.79439926147461 L 46.28949356079102 36.79439926147461 L 46.28949356079102 29.68172836303711 L 46.28949356079102 29.33672904968262 L 46.63449096679688 29.33672904968262 L 48.82052230834961 29.33672904968262 L 49.16552352905273 29.33672904968262 L 49.16552352905273 29.68172836303711 L 49.16552352905273 39.3254280090332 L 49.16552352905273 39.67042922973633 Z'\n                  stroke='none'\n                />\n                <path\n                  d='M 48.82052230834961 39.3254280090332 L 48.82052230834961 29.68172836303711 L 46.63449096679688 29.68172836303711 L 46.63449096679688 37.13939666748047 L 39.17681121826172 37.13939666748047 L 39.17681121826172 39.3254280090332 L 48.82052230834961 39.3254280090332 M 49.51052093505859 40.01542663574219 L 48.82052230834961 40.01542663574219 L 39.17681121826172 40.01542663574219 L 38.48681259155273 40.01542663574219 L 38.48681259155273 39.3254280090332 L 38.48681259155273 37.13939666748047 L 38.48681259155273 36.44939804077148 L 39.17681121826172 36.44939804077148 L 45.94449234008789 36.44939804077148 L 45.94449234008789 29.68172836303711 L 45.94449234008789 28.99172782897949 L 46.63449096679688 28.99172782897949 L 48.82052230834961 28.99172782897949 L 49.51052093505859 28.99172782897949 L 49.51052093505859 29.68172836303711 L 49.51052093505859 39.3254280090332 L 49.51052093505859 40.01542663574219 Z'\n                  stroke='none'\n                />\n              </g>\n            </g>\n          </g>\n          <g transform='translate(-149 19)'>\n            <g transform='translate(1809 255)' fill='none' stroke='#e66e24' strokeWidth='6'>\n              <circle cx='46.477' cy='46.477' r='43.477' fill='none' />\n            </g>\n          </g>\n        </g>\n      </svg>\n      <Text className={'text'} showCopy={showCopy}>\n        Review Screens\n      </Text>\n    </Container>\n  )\n}\nexport default ResponsiveIcon\n","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst CMSDiv = styled.div`\n  background-color: white;\n  border-radius: 15px;\n  min-height: 400px;\n  min-width: 400px;\n  padding: 20px 50px;\n  box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.22);\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`\nconst Title = styled.h2`\n  font-family: ${props => props.theme.fontBody};\n  font-size: 20px;\n  font-weight: normal;\n`\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  width: 100%;\n  margin-top: 20px;\n`\nconst StyledButton = styled.button`\n  font-size: 18px;\n  font-weight: 700;\n  height: 20px;\n  outline: none;\n  height: 45px;\n  width: 120px;\n  border: none;\n  background-color: ${props => props.theme.accentPrimary};\n  font-family: ${props => props.theme.fontBody};\n  text-align: center;\n  text-transform: uppercase;\n  color: white;\n  border-radius: 3px;\n  margin-left: 10px;\n  transition: 0.3s ease-in-out;\n  :hover {\n    cursor: pointer;\n    background-color: ${props => props.theme.accentPrimaryDark};\n  }\n`\nconst GhostButton = styled(StyledButton)`\n  background-color: white;\n  color: ${props => props.theme.mainPrimary};\n  :hover {\n    color: ${props => props.theme.mainPrimary};\n    background-color: ${props => props.theme.backgroundAccent};\n  }\n`\n\nconst CMSModal = props => {\n  const { error, formData, template, updateFormData, updateTemplateData, selectedTemplates, saveModalData, cleanOutImages } = props\n  let tempName = template.tempName\n  let FormModal = template.modal\n  return (\n    <CMSDiv className={'cms-div'}>\n      <Title className={'template-title'}>{tempName}</Title>\n      <FormModal\n        data={formData}\n        updateFormData={updateFormData}\n        selectedTemplates={selectedTemplates}\n        updateTemplateData={updateTemplateData}\n        cleanOutImages={cleanOutImages}\n      />\n      {error && <div>*Please fill out the required fields to submit your template</div>}\n      <ButtonContainer>\n        <GhostButton\n          onClick={() => {\n            updateTemplateData({})\n          }}>\n          Clear All\n        </GhostButton>\n        <StyledButton\n          onClick={e => {\n            saveModalData()\n          }}>\n          Save\n        </StyledButton>\n      </ButtonContainer>\n    </CMSDiv>\n  )\n}\n\nCMSModal.propTypes = {\n  error: PropTypes.bool,\n  closeModal: PropTypes.func,\n  formData: PropTypes.object,\n  updateFormData: PropTypes.func,\n  cleanOutImages: PropTypes.func,\n  tempName: PropTypes.string,\n  updateTemplateData: PropTypes.func\n}\n\nexport default CMSModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst Container = styled.div`\n  background-color: white;\n  border-radius: 15px;\n  min-height: 400px;\n  min-width: 400px;\n  padding: 20px 50px;\n  box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.22);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\nconst Title = styled.h2`\n  font-family: ${props => props.theme.fontBody};\n  font-size: 20px;\n  font-weight: normal;\n  text-transform: uppercase;\n`\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  width: 100%;\n  margin-top: 20px;\n`\nconst StyledButton = styled.button`\n  font-size: 18px;\n  font-weight: 700;\n  height: 20px;\n  outline: none;\n  height: 45px;\n  width: 120px;\n  border: none;\n  background-color: ${props => props.theme.accentPrimary};\n  font-family: ${props => props.theme.fontBody};\n  text-align: center;\n  text-transform: uppercase;\n  color: white;\n  border-radius: 3px;\n  margin-left: 10px;\n  transition: 0.3s ease-in-out;\n  :hover {\n    cursor: pointer;\n    background-color: ${props => props.theme.accentPrimaryDark};\n  }\n`\nconst GhostButton = styled(StyledButton)`\n  background-color: white;\n  color: ${props => props.theme.mainPrimary};\n  :hover {\n    color: ${props => props.theme.mainPrimary};\n    background-color: ${props => props.theme.backgroundAccent};\n  }\n`\n\nconst IframeModal = props => {\n  const { goBack, moveForward, copyData, currentView } = props\n  return (\n    <Container className={'cms-div'}>\n      <Title className={'template-title'}>{currentView.name}</Title>\n      <iframe title={'screenView'} srcDoc={copyData} width={currentView.width} height={currentView.height} />\n      <ButtonContainer>\n        {currentView.idx > 0 && (\n          <GhostButton\n            onClick={() => {\n              goBack()\n            }}>\n            Back\n          </GhostButton>\n        )}\n        <StyledButton\n          onClick={e => {\n            moveForward()\n          }}>\n          {currentView.name === 'desktop' ? 'Confirm' : 'Next'}\n        </StyledButton>\n      </ButtonContainer>\n    </Container>\n  )\n}\n\nIframeModal.propTypes = {\n  goBack: PropTypes.func,\n  moveForward: PropTypes.func,\n  copyData: PropTypes.string,\n  currentView: PropTypes.object\n}\n\nexport default IframeModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst XMarkSvg = styled.svg`\n  width: ${props => props.width || '39px'};\n  height: ${props => props.height || '50px'};\n  stroke-width: 95;\n  stroke-miterlimit: 10;\n  stroke: ${props => props.fill || 'white'};\n  transition: 0.3s ease-in-out;\n`\nconst XMark = props => {\n  const { fill, height, width } = props\n  return (\n    <XMarkSvg viewBox='0 0 600 600' fill={fill} height={height} width={width} className='x-mark'>\n      <g>\n        <line x1='22.907' y1='31.191' x2='579.034' y2='566.567' />\n        <line x1='579.034' y1='31.191' x2='22.907' y2='566.567' />\n      </g>\n    </XMarkSvg>\n  )\n}\n\nXMark.propTypes = {\n  fill: PropTypes.string,\n  height: PropTypes.string,\n  width: PropTypes.string\n}\n\nexport default XMark\n","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nimport CMSModal from './CMSModal'\nimport IframeModal from './IframeModal'\nimport { theme } from '../../utils/globalStyles'\nimport XMark from './XMark'\n\nconst ModalGrayBG = styled.div`\n  position: fixed;\n  overflow-y: auto;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  z-index: 10;\n  background: rgba(0, 0, 0, 0.7);\n`\nconst ModalWrapper = styled.div`\n  position: absolute;\n  left: 50%;\n  top: 50px;\n  transform: translate(-50%, 0);\n  margin-bottom: 100px;\n  min-width: 650px;\n  @media screen and (min-width: ${props => props.theme.tablet}px) {\n    top: 100px;\n  }\n`\nconst Exit = styled.div`\n  position: absolute;\n  cursor: pointer;\n  ${props =>\n    props.screen === 'mobile'\n      ? `\n    width: 17px;\n    height: 16px;\n    right: 0;\n    top: -25px;`\n      : `\n    width: 20px;\n    height: 20px;\n    right: 15px;\n    top: 17px;`}\n  .x-mark:hover {\n    stroke: ${props => props.theme.accentPrimaryDark};\n  }\n`\n\nconst Modal = props => {\n  let {\n    error,\n    closeModal,\n    displayModal,\n    formData,\n    updateFormData,\n    updateTemplateData,\n    saveModalData,\n    cleanOutImages,\n    selectedTemplates,\n    template,\n    copyData,\n    currentView,\n    goBack,\n    moveForward\n  } = props\n  let xMarkSize = '16px'\n\n  return (\n    <>\n      {displayModal && (\n        <ModalGrayBG className={'gray-bg'} onClick={e => closeModal(e, 'close')}>\n          <ModalWrapper className={'modal-wrapper'} onClick={e => closeModal(e, 'open')}>\n            <Exit className={'exit-modal'} onClick={e => closeModal(e, 'close')}>\n              <XMark fill={theme.preHeaderDark} height={xMarkSize} width={xMarkSize} />\n            </Exit>\n            {template ? (\n              <CMSModal\n                selectedTemplates={selectedTemplates}\n                closeModal={closeModal}\n                formData={formData}\n                updateFormData={updateFormData}\n                template={template}\n                error={error}\n                saveModalData={saveModalData}\n                updateTemplateData={updateTemplateData}\n                cleanOutImages={cleanOutImages}\n              />\n            ) : (\n              <IframeModal copyData={copyData} currentView={currentView} goBack={goBack} moveForward={moveForward} />\n            )}\n          </ModalWrapper>\n        </ModalGrayBG>\n      )}\n    </>\n  )\n}\n\nModal.propTypes = {\n  error: PropTypes.bool,\n  closeModal: PropTypes.func,\n  displayModal: PropTypes.bool,\n  tempName: PropTypes.string,\n  formData: PropTypes.object,\n  formProps: PropTypes.func,\n  updateFormData: PropTypes.func,\n  cleanOutImages: PropTypes.func,\n  updateTemplateData: PropTypes.func,\n  copyData: PropTypes.string,\n  currentView: PropTypes.object,\n  goBack: PropTypes.func,\n  moveForward: PropTypes.func\n}\n\nexport default Modal\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport ReactDOMServer from 'react-dom/server'\n\nimport ExportIcon from './parts/ExportIcon'\nimport ResponsiveIcon from './parts/ResponsiveIcon'\nimport Modal from '../modal/Modal'\nimport { buildJSON } from '../../utils/utils'\n\nconst ConfirmExport = styled.div`\n  position: absolute;\n  right: 15px;\n  top: 5px;\n  z-index: 1;\n  display: flex;\n  .confirm-view:hover + .tip {\n    opacity: 1;\n    height: 35px;\n    width: 150px;\n    padding: 5px 8px;\n  }\n`\n\nconst Button = styled.button`\n  opacity: ${props => (props.showCopy ? 1 : 0)};\n  background: transparent;\n  height: 67px;\n  width: 67px;\n  border: none;\n  outline: none;\n  transition: 0.3s ease-in-out;\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.1);\n  }\n`\n\nconst TextArea = styled.textarea`\n  height: ${props => (props.showCopy ? '150px' : '0px')};\n  width: ${props => (props.showCopy ? '300px' : '0px')};\n  opacity: ${props => (props.showCopy ? 1 : 0)};\n  z-index: 2;\n  position: absolute;\n  right: 80px;\n  top: 10px;\n  border: none;\n  border-radius: 6px 6px 6px 6px;\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n  font-size: 10px;\n  line-height: 1.4em;\n  padding: ${props => (props.showCopy ? '5px 8px' : '')};\n  resize: none;\n  background-color: ${props => props.theme.backgroundAccent + 'CC'};\n  transition: height 0.3s ease-in-out, width 0.3s ease-in-out, opacity 0.3s ease-in-out;\n`\nconst Tip = styled.div`\n  height: 0px;\n  width: 0px;\n  z-index: 2;\n  opacity: 0;\n  position: absolute;\n  right: 10px;\n  top: 80px;\n  border: none;\n  border-radius: 6px 6px 6px 6px;\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n  font-size: 10px;\n  line-height: 1.4em;\n  resize: none;\n  background-color: ${props => props.theme.backgroundAccent + 'CC'};\n  transition: height 0.3s ease-in-out, width 0.3s ease-in-out, opacity 0.3s ease-in-out;\n`\nconst CssLink = () => {\n  return (\n    <link rel='stylesheet' href='https://dev.woodlanddirect.com/learningcenter/learning-center.css' type='text/css' />\n  )\n}\n\nconst JsLink = () => {\n  return <script className={'react'} src='https://dev.woodlanddirect.com/learningcenter/learning-center.js' />\n}\n\nconst ConfirmExportPanel = props => {\n  const { selectedTemplates } = props\n  const viewSize = [\n    { name: 'mobile', width: '320px', height: '568px', idx: 0 },\n    { name: 'tablet', width: '768px', height: '1024px', idx: 1 },\n    { name: 'desktop', width: '1366px', height: '768px', idx: 2 }\n  ]\n  const [showCopy, setShowCopy] = useState(false)\n  const [confirmedViews, setConfirmedViews] = useState(false)\n  const [currentView, setCurrentView] = useState(viewSize[0])\n  const [copyData, setCopyData] = useState()\n  const [displayModal, setDisplayModal] = useState(false)\n\n  const createHTML = () => {\n    let templates\n    if (selectedTemplates.length) {\n      templates = ReactDOMServer.renderToStaticMarkup(<CssLink />)\n      selectedTemplates.map((template, idx) => {\n        let Template = template.component\n        let indexId = template.id + '-' + (idx + 1)\n        if (template.modal.name === 'GalleryModal') {\n          let templateData =\n            template.tempName === 'Gallery Template'\n              ? { JSON: buildJSON(template.data), styling: template.data }\n              : template.data\n          return (templates += ReactDOMServer.renderToStaticMarkup(\n            <Template templateData={templateData} id={indexId} />\n          ))\n        } else {\n          return (templates += ReactDOMServer.renderToStaticMarkup(\n            <Template templateData={template.data} id={indexId} />\n          ))\n        }\n      })\n      templates += ReactDOMServer.renderToStaticMarkup(<JsLink />)\n      setCopyData(templates)\n    }\n  }\n  const exportHTML = () => {\n    createHTML()\n    setShowCopy(true)\n    setTimeout(() => setShowCopy(false), 3000)\n  }\n\n  const goBack = () => {\n    let back = currentView.idx - 1\n    setCurrentView(viewSize[back])\n  }\n  const moveForward = () => {\n    if (currentView.name === 'desktop') {\n      setConfirmedViews(true)\n      toggleDisplayModal()\n      setCurrentView(viewSize[0])\n    } else {\n      let next = currentView.idx + 1\n      setCurrentView(viewSize[next])\n    }\n  }\n\n  useEffect(\n    () => {\n      let textarea = document.getElementById('copy-textarea')\n      textarea.select()\n      document.execCommand('copy')\n    },\n    [copyData]\n  )\n  const openModal = () => {\n    createHTML()\n    toggleDisplayModal()\n  }\n\n  const toggleDisplayModal = () => {\n    setDisplayModal(!displayModal)\n  }\n\n  const closeModal = (e, value) => {\n    e.stopPropagation()\n    if (value === 'close') {\n      toggleDisplayModal()\n    }\n  }\n  return (\n    <ConfirmExport>\n      <TextArea showCopy={showCopy} type={'text'} value={copyData} id={'copy-textarea'} readOnly={'readonly'} />\n      <Button showCopy={showCopy} onClick={exportHTML} className={'export-btn'}>\n        <ExportIcon showCopy={showCopy} />\n      </Button>\n      <Button showCopy={showCopy} onClick={openModal} className={'confirm-view'}>\n        <ResponsiveIcon />\n      </Button>\n      {!confirmedViews && <Tip className={'tip'}> Please review each screen type before exporting your code!</Tip>}\n      <Modal\n        displayModal={displayModal}\n        closeModal={closeModal}\n        copyData={copyData}\n        currentView={currentView}\n        goBack={goBack}\n        moveForward={moveForward}\n      />\n    </ConfirmExport>\n  )\n}\nexport default ConfirmExportPanel\n","import React from 'react'\nconst EditIcon = () => {\n  return (\n    <svg viewBox='0 0 93 93' className={'edit-icon'}>\n      <path\n        d='M153.88,112.706c-2.673-2.673-7.871-3.226-12.971,1.873l-25.033,25.033-.023.028a1.267,1.267,0,0,0-.088.108,1.2,1.2,0,0,0-.071.1.885.885,0,0,0-.054.1,1.268,1.268,0,0,0-.057.128.044.044,0,0,1-.014.031l-4.727,14.046a1.277,1.277,0,0,0,1.617,1.617l14.052-4.725.04-.017a1.268,1.268,0,0,0,.122-.054c.037-.017.074-.037.108-.057a.765.765,0,0,0,.1-.071,1.256,1.256,0,0,0,.1-.082l.028-.023,25.033-25.033a12.153,12.153,0,0,0,3.794-7.114A7.156,7.156,0,0,0,153.88,112.706Zm-15.2,7.713,7.511,7.511-20.1,20.107-2.852-2.852,17.877-17.877a1.277,1.277,0,1,0-1.8-1.8L121.438,143.38l-2.855-2.863Zm-24,30.319,2.647-7.863,3.2,3.2h0l3.2,3.2-7.863,2.647ZM148,126.125l-7.514-7.514,1.322-1.322,7.511,7.511Zm3.09-3.17-7.434-7.434c3.507-2.951,6.762-2.664,8.419-1.01s1.961,4.935-.987,8.445Z'\n        transform='translate(-87.776, -88.706)'\n        fill='#E66D1C'\n      />\n      <circle cx='46.5' cy='46.5' r='43.5' fill='none' stroke='#E66D1C' strokeWidth='6' />\n    </svg>\n  )\n}\nexport default EditIcon\n","import React from 'react'\n\nconst RemoveIcon = () => {\n  return (\n    <svg viewBox='0 0 93 93' className={'remove-icon'}>\n      <g transform='translate(-1780 -688)'>\n        <circle\n          cx='46.5'\n          cy='46.5'\n          r='43.5'\n          transform='translate(1780 688)'\n          fill='none'\n          stroke='#E66D1C'\n          strokeWidth='6'\n        />\n        <line\n          x2='47'\n          transform='translate(1803.5 734.5)'\n          fill='none'\n          stroke='#E66D1C'\n          strokeLinecap='round'\n          strokeWidth='7'\n        />\n\n      </g>\n    </svg>\n  )\n}\nexport default RemoveIcon\n","import React from 'react'\nconst MoveIcon = props => {\n  let { direction } = props\n  return (\n    <svg className={'move-icon'} viewBox='0 0 93 93' transform={direction === 'down' ? 'rotate(180)' : ''}>\n      <g transform='translate(-1660 -688)'>\n        <circle cx='46' cy='46' r='43' fill='none' stroke='#E66D1C' strokeWidth='6' transform='translate(1660 688)' />\n        <g transform='translate(5.5 138.5)'>\n          <line\n            y1='24.984'\n            x2='25.008'\n            transform='translate(1675.5 583.5)'\n            fill='none'\n            stroke='#E66D1C'\n            strokeLinecap='round'\n            strokeWidth='6'\n          />\n          <line\n            x1='25.008'\n            y1='24.984'\n            transform='translate(1700.508 583.5)'\n            fill='none'\n            stroke='#E66D1C'\n            strokeLinecap='round'\n            strokeWidth='6'\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\nexport default MoveIcon\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport EditIcon from './parts/EditIcon'\nimport RemoveIcon from './parts/RemoveIcon'\nimport MoveIcon from './parts/MoveIcon'\n\nconst Panel = styled.div`\n  position: absolute;\n  bottom: 0;\n  right: 10px;\n  font-family: ${props => props.theme.fontBody};\n  display: flex;\n  transition: opacity .3s ease-in-out;\n  opacity: 0;\n`\nconst IconContainer = styled.div`\n  height: 50px;\n  width: 50px;\n  padding: 10px 5px;\n  cursor: pointer;\n  position: relative;\n  transform: scale(1);\n  transition: all 0.3s ease-in-out;\n  &:hover {\n    display: block;\n    transform: scale(1.1) rotate(0deg);\n    transition: all 0.3s ease-in-out;\n    circle {\n      fill: ${props => props.theme.accentPrimary};\n    }\n    .text {\n      opacity: 1;\n      transition: opacity 0.3s ease-in-out;\n    }\n  }\n`\nconst Text = styled.div`\n  opacity: 0;\n  position: absolute;\n  color: white;\n  font-size: 10px;\n  top: 50%;\n  left: 50%;\n  transform: translateX(-50%) translateY(-50%);\n  text-transform: uppercase;\n  font-weight: bold;\n  z-index: 1;\n`\nconst ControlPanel = props => {\n  let { updateSelectedTemplates, handleClick, idx } = props\n  return (\n    <Panel className={'control-panel'}>\n      <IconContainer className={'edit-container'} onClick={handleClick}>\n        <Text className={'text'}>edit</Text>\n        <EditIcon />\n      </IconContainer>\n      <IconContainer\n        className={'down-container'}\n        onClick={() => {\n          updateSelectedTemplates('down', '', idx)\n        }}>\n        <Text className={'text'}>down</Text>\n        <MoveIcon direction={'down'} />\n      </IconContainer>\n      <IconContainer\n        className={'up-container'}\n        onClick={() => {\n          updateSelectedTemplates('up', '', idx)\n        }}>\n        <Text className={'text'}>up</Text>\n        <MoveIcon direction={'up'} />\n      </IconContainer>\n      <IconContainer\n        className={'remove-container'}\n        onClick={() => {\n          updateSelectedTemplates('remove', '', idx)\n        }}>\n        <Text className={'text'}>remove</Text>\n        <RemoveIcon />\n      </IconContainer>\n    </Panel>\n  )\n}\nexport default ControlPanel\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\n\nimport ControlPanel from '../controlPanel/ControlPanel'\nimport Modal from '../modal/Modal'\nimport { buildJSON, getGroupInputs, getEmptyInputs, getErrorData } from '../../utils/utils'\n\nconst TemplateContain = styled.div`\n  position: relative;\n  height: auto;\n  transition: height 5s ease-in;\n  &:hover {\n    min-height: 127px;\n    .control-panel {\n      opacity: 1;\n    }\n  }\n  .up-container {\n    display: ${props => (props.idx === 0 ? 'none' : 'default')};\n  }\n  .down-container {\n    display: ${props => (props.selectedTemplateLength === props.idx ? 'none' : 'default')};\n  }\n`\nconst TemplateContainer = props => {\n  const {\n    idx,\n    screen,\n    selectedTemplates,\n    selectedTemplateLength,\n    template,\n    updateSelectedTemplates,\n    giveSelectedTemplateData\n  } = props\n  const Component = template.component\n  const [displayForm, setDisplayForm] = useState(false)\n  const [data, setData] = useState(template.data)\n  const [error, setError] = useState(false)\n\n  useEffect(\n    () => {\n      // update useState as prop type updates\n      setData(template.data)\n    },\n    [template.data]\n  )\n\n  const updateFormData = updatedData => {\n    let newFormData = { ...data }\n\n    // builds groups if react needs to map over data\n    if (updatedData.group) {\n      let index = updatedData.group - 1\n      let object = { value: updatedData.value, error: updatedData.error }\n      newFormData.groups = newFormData.groups ? [...newFormData.groups] : (newFormData.groups = [])\n\n      // this was added incase they edit the galleries out of order, they stay in place\n      let arrayLength = newFormData.groups.length ? newFormData.groups.length - 1 : newFormData.groups.length\n      while (arrayLength < index) {\n        newFormData.groups.push({})\n        arrayLength++\n      }\n      newFormData.groups.splice(index, 1, { ...newFormData.groups[index], [updatedData.name]: object })\n    } else {\n      newFormData[updatedData.name] = { value: updatedData.value, error: updatedData.error }\n    }\n    setData(newFormData)\n  }\n  const cleanOutImages = (groupIdx, numberOfImages) => {\n    let maxImages = [0, 1, 2]\n    let newFormData = { ...data }\n    maxImages.forEach(idx => {\n      if (idx + 1 > numberOfImages) {\n        if (newFormData.groups[groupIdx]['image' + idx]) {\n          delete newFormData.groups[groupIdx]['image' + idx]\n        }\n        if (newFormData.groups[groupIdx]['imgAltText' + idx]) {\n          delete newFormData.groups[groupIdx]['imageAltText' + idx]\n        }\n      }\n    })\n    setData(newFormData)\n  }\n\n  // modal functions\n  const toggleDisplayForm = () => {\n    setError(false)\n    setDisplayForm(!displayForm)\n  }\n\n  const handleClick = () => {\n    toggleDisplayForm()\n  }\n\n  const saveModalData = () => {\n    let clonedData = { ...data }\n    let groups = document.getElementsByClassName('groups')\n    let inputs = document.getElementsByClassName('input')\n    let clonedGroups = getGroupInputs(clonedData, groups)\n    let incompleteFields = getEmptyInputs(clonedData, inputs)\n    // if groups are present see if error is in stored data\n    let errorInfo = getErrorData(clonedData, clonedGroups, incompleteFields)\n    // update form data\n    setData(errorInfo.clonedData)\n    // update error status\n    setError(errorInfo.errorPresent)\n    // if no error is present toggle modal and save data to highest level\n    if (!errorInfo.errorPresent) {\n      toggleDisplayForm()\n      updateTemplateData(data)\n    }\n  }\n\n  const closeModal = (e, value) => {\n    e.stopPropagation()\n    if (value === 'close') {\n      toggleDisplayForm()\n    }\n  }\n  // end modal functions\n\n  const updateTemplateData = newData => {\n    setData(newData)\n    giveSelectedTemplateData(idx, newData)\n  }\n  let indexId = template.id + '-' + (idx + 1)\n  let templateData =\n    template.tempName === 'Gallery Template'\n      ? { JSON: buildJSON(template.data), styling: template.data }\n      : template.data\n  return (\n    <TemplateContain className={'template-container'} selectedTemplateLength={selectedTemplateLength} idx={idx}>\n      <Component templateData={templateData} id={indexId} />\n      <ControlPanel\n        updateSelectedTemplates={updateSelectedTemplates}\n        handleClick={handleClick}\n        idx={idx}\n        modal={template.modal}\n      />\n      <Modal\n        selectedTemplates={selectedTemplates}\n        displayModal={displayForm}\n        closeModal={closeModal}\n        screen={screen}\n        template={template}\n        formData={data}\n        error={error}\n        saveModalData={saveModalData}\n        updateFormData={updateFormData}\n        updateTemplateData={updateTemplateData}\n        cleanOutImages={cleanOutImages}\n      />\n    </TemplateContain>\n  )\n}\n\nexport default TemplateContainer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport ConfirmExportPanel from '../confirmExportPanel/ConfirmExportPanel'\nimport TemplateContainer from './TemplateContainer'\n\nconst TemplatesContainer = styled.div`\n  position: relative;\n  :hover {\n    button {\n      opacity: 1;\n    }\n  }\n`\n\nconst SelectedTemplatesContainer = props => {\n  const { selectedTemplates, updateSelectedTemplates, giveSelectedTemplateData } = props\n\n  return (\n    <TemplatesContainer>\n      <ConfirmExportPanel selectedTemplates={selectedTemplates} />\n      {selectedTemplates.map((template, idx) => {\n        let selectedTemplateLength = selectedTemplates.length - 1\n        return (\n          <TemplateContainer\n            key={idx}\n            idx={idx}\n            selectedTemplates={selectedTemplates}\n            selectedTemplateLength={selectedTemplateLength}\n            template={template}\n            updateSelectedTemplates={updateSelectedTemplates}\n            giveSelectedTemplateData={giveSelectedTemplateData}\n          />\n        )\n      })}\n    </TemplatesContainer>\n  )\n}\n\nexport default SelectedTemplatesContainer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport SelectedTemplatesContainer from './SelectedTemplatesContainer'\n\nconst HeaderFooterImg = styled.img`\n  width: 100%;\n  margin-bottom: -4px;\n`\nconst TemplatesContainer = styled.div`\n`\n\nconst TemplateDirections = styled.div`\n  text-align: center;\n  text-transform: uppercase;\n  font-family: ${props => props.theme.fontBody};\n  font-size: 26px;\n  margin: 300px auto;\n`\n\nconst TemplatesPreview = props => {\n  const { screen, selectedTemplates, updateSelectedTemplates, giveSelectedTemplateData } = props\n  let noSelections = selectedTemplates.length === 0\n\n  return (\n    <>\n      <HeaderFooterImg\n        className={'header-image'}\n        src={'https://dev.woodlanddirect.com/learningcenter/pagebuilder+/header-footer/header-' + screen + '.png'}\n        alt={'Header'}\n      />\n      <TemplatesContainer className={'templates-container'}>\n        {noSelections ? (\n          <TemplateDirections className={'template-directions'}>\n            build your page by selecting a template from the left!\n          </TemplateDirections>\n        ) : (\n          <SelectedTemplatesContainer\n            selectedTemplates={selectedTemplates}\n            updateSelectedTemplates={updateSelectedTemplates}\n            giveSelectedTemplateData={giveSelectedTemplateData}\n          />\n        )}\n      </TemplatesContainer>\n      <HeaderFooterImg\n        className={'footer-image'}\n        src={'https://dev.woodlanddirect.com/learningcenter/pagebuilder+/header-footer/footer-' + screen + '.png'}\n        alt={'Footer'}\n      />\n    </>\n  )\n}\n\nexport default TemplatesPreview\n","import React, { useEffect, useState } from 'react'\nimport { ThemeProvider } from 'styled-components'\n\nimport SideBar from './sideBar/SideBar'\nimport TemplatesPreview from './templatesContainers/TemplatesPreview'\nimport { templatesData } from '../utils/templates'\nimport {\n  addSelectedTemplates,\n  determineScreen,\n  removeSelectedTemplates,\n  moveUpSelectedTemplates,\n  moveDownSelectedTemplates,\n  addReadMoreClicks,\n  readMore\n} from '../utils/utils'\nimport { theme } from '../utils/globalStyles'\n\nconst App = () => {\n  const [screen, setScreen] = useState('desktop')\n  const [selectedTemplates, setSelectedTemplates] = useState([])\n  const updateSelectedTemplates = (action, component, idx) => {\n    let updatedTemplates\n    let clone = [...selectedTemplates]\n    if (action === 'add') {\n      const newTemplate = {\n        component: templatesData[component].component,\n        data: {\n          addPadding: false,\n          backgroundDark: false\n        },\n        modal: templatesData[component].modal,\n        tempName: component,\n        id: templatesData[component].id\n      }\n      updatedTemplates = addSelectedTemplates(newTemplate, clone)\n    }\n    if (action === 'remove') {\n      const hasData = Object.keys(selectedTemplates[idx].data).length !== 0\n      if (hasData) {\n        const confirmation = window.confirm(\n          'By removing this template you are removing any data filled out for this template. Once removed all data will be lost. Do you wish to continue?'\n        )\n\n        if (confirmation) {\n          updatedTemplates = removeSelectedTemplates(clone, idx)\n\n        } else {\n          updatedTemplates = selectedTemplates\n        }\n      } else {\n        updatedTemplates = removeSelectedTemplates(clone, idx)\n      }\n    }\n    if (action === 'up') {\n      updatedTemplates = moveUpSelectedTemplates(clone, idx)\n    }\n    if (action === 'down') {\n      updatedTemplates = moveDownSelectedTemplates(clone, idx)\n    }\n    setSelectedTemplates(updatedTemplates)\n  }\n  useEffect(() => {\n    const updateScreen = () => {\n      let width = window.innerWidth\n      let screen = determineScreen(width)\n      setScreen(screen)\n    }\n    // call function for initial run\n    updateScreen()\n    // add event listener\n    window.addEventListener('resize', updateScreen)\n    window.addEventListener('resize', readMore)\n    return () => window.removeEventListener('resize', updateScreen)\n  }, []) // Empty array ensures that effect is only run on mount and unmount\n  // attach data to the selected template\n  const giveSelectedTemplateData = (idx, data) => {\n    let clone = [...selectedTemplates]\n    clone[idx].data = data\n    setSelectedTemplates(clone)\n  }\n  // useeffect to add funtionality to html\n  useEffect(\n    () => {\n      addReadMoreClicks()\n    },\n    [selectedTemplates]\n  )\n  return (\n    <ThemeProvider theme={theme}>\n      <>\n        <SideBar updateSelectedTemplates={updateSelectedTemplates} />\n        <TemplatesPreview\n          screen={screen}\n          selectedTemplates={selectedTemplates}\n          updateSelectedTemplates={updateSelectedTemplates}\n          giveSelectedTemplateData={giveSelectedTemplateData}\n        />\n      </>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './components/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}